[{"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\layout\\Layout.jsx":"3","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\redux\\reducers\\index.js":"4","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\redux\\actions\\ThemeAction.js":"5","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\Routes.jsx":"6","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\topnav\\TopNav.jsx":"7","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\sidebar\\Sidebar.jsx":"8","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\redux\\reducers\\ThemeReducer.js":"9","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\Customers.jsx":"10","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\ProductColor.jsx":"11","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\Dashboard.jsx":"12","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\ProductColorBranch.jsx":"13","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\Products.jsx":"14","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\ProductWorkingPage.jsx":"15","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\ProductColorBranchWorkingPage.jsx":"16","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\StatisticalPage.jsx":"17","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\ProductColorWorkingPage.jsx":"18","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\StatisticalMonthOfBranch.jsx":"19","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\StatisticalCommonProductSales.jsx":"20","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\thememenu\\ThemeMenu.jsx":"21","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\dropdown\\Dropdown.jsx":"22","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\badge\\Badge.jsx":"23","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\table\\Table.jsx":"24","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\status-card\\StatusCard.jsx":"25"},{"size":930,"mtime":1682582831834,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1682582831844,"results":"28","hashOfConfig":"27"},{"size":1293,"mtime":1682582831828,"results":"29","hashOfConfig":"27"},{"size":167,"mtime":1682582831844,"results":"30","hashOfConfig":"27"},{"size":390,"mtime":1682582831843,"results":"31","hashOfConfig":"27"},{"size":1881,"mtime":1682615368546,"results":"32","hashOfConfig":"27"},{"size":2555,"mtime":1682582831833,"results":"33","hashOfConfig":"27"},{"size":1369,"mtime":1682582831829,"results":"34","hashOfConfig":"27"},{"size":416,"mtime":1682582831843,"results":"35","hashOfConfig":"27"},{"size":2023,"mtime":1682590451294,"results":"36","hashOfConfig":"27"},{"size":2427,"mtime":1682590987972,"results":"37","hashOfConfig":"27"},{"size":7202,"mtime":1682582831835,"results":"38","hashOfConfig":"27"},{"size":3546,"mtime":1682615334469,"results":"39","hashOfConfig":"27"},{"size":2347,"mtime":1682590869555,"results":"40","hashOfConfig":"27"},{"size":20573,"mtime":1682618743792,"results":"41","hashOfConfig":"27"},{"size":6851,"mtime":1682618490666,"results":"42","hashOfConfig":"27"},{"size":1202,"mtime":1682582831839,"results":"43","hashOfConfig":"27"},{"size":7827,"mtime":1682615269457,"results":"44","hashOfConfig":"27"},{"size":4197,"mtime":1682596448887,"results":"45","hashOfConfig":"27"},{"size":4859,"mtime":1682619408917,"results":"46","hashOfConfig":"27"},{"size":5057,"mtime":1682582831832,"results":"47","hashOfConfig":"27"},{"size":1872,"mtime":1682582831827,"results":"48","hashOfConfig":"27"},{"size":229,"mtime":1682582831826,"results":"49","hashOfConfig":"27"},{"size":2477,"mtime":1682582831831,"results":"50","hashOfConfig":"27"},{"size":467,"mtime":1682582831831,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"apwn94",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\index.js",[],["108","109"],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\layout\\Layout.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\redux\\actions\\ThemeAction.js",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\Routes.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\topnav\\TopNav.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\sidebar\\Sidebar.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\redux\\reducers\\ThemeReducer.js",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\Customers.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\ProductColor.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\Dashboard.jsx",["110"],"import React, {useEffect} from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Chart from 'react-apexcharts'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport StatusCard from '../components/status-card/StatusCard'\r\n\r\nimport Table from '../components/table/Table'\r\n\r\nimport Badge from '../components/badge/Badge'\r\n\r\nimport statusCards from '../assets/JsonData/status-card-data.json'\r\n\r\nconst chartOptions = {\r\n    series: [{\r\n        name: 'Online Customers',\r\n        data: [40,70,20,90,36,80,30,91,60]\r\n    }, {\r\n        name: 'Store Customers',\r\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\r\n    }],\r\n    options: {\r\n        color: ['#6ab04c', '#2980b9'],\r\n        chart: {\r\n            background: 'transparent'\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            curve: 'smooth'\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n        },\r\n        legend: {\r\n            position: 'top'\r\n        },\r\n        grid: {\r\n            show: false\r\n        }\r\n    }\r\n}\r\n\r\nconst topCustomers = {\r\n    head: [\r\n        'user',\r\n        'total orders',\r\n        'total spending'\r\n    ],\r\n    body: [\r\n        {\r\n            \"username\": \"john doe\",\r\n            \"order\": \"490\",\r\n            \"price\": \"$15,870\"\r\n        },\r\n        {\r\n            \"username\": \"frank iva\",\r\n            \"order\": \"250\",\r\n            \"price\": \"$12,251\"\r\n        },\r\n        {\r\n            \"username\": \"anthony baker\",\r\n            \"order\": \"120\",\r\n            \"price\": \"$10,840\"\r\n        },\r\n        {\r\n            \"username\": \"frank iva\",\r\n            \"order\": \"110\",\r\n            \"price\": \"$9,251\"\r\n        },\r\n        {\r\n            \"username\": \"anthony baker\",\r\n            \"order\": \"80\",\r\n            \"price\": \"$8,840\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst renderCusomerHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderCusomerBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.username}</td>\r\n        <td>{item.order}</td>\r\n        <td>{item.price}</td>\r\n    </tr>\r\n)\r\n\r\nconst latestOrders = {\r\n    header: [\r\n        \"order id\",\r\n        \"user\",\r\n        \"total price\",\r\n        \"date\",\r\n        \"status\"\r\n    ],\r\n    body: [\r\n        {\r\n            id: \"#OD1711\",\r\n            user: \"john doe\",\r\n            date: \"17 Jun 2021\",\r\n            price: \"$900\",\r\n            status: \"shipping\"\r\n        },\r\n        {\r\n            id: \"#OD1712\",\r\n            user: \"frank iva\",\r\n            date: \"1 Jun 2021\",\r\n            price: \"$400\",\r\n            status: \"paid\"\r\n        },\r\n        {\r\n            id: \"#OD1713\",\r\n            user: \"anthony baker\",\r\n            date: \"27 Jun 2021\",\r\n            price: \"$200\",\r\n            status: \"pending\"\r\n        },\r\n        {\r\n            id: \"#OD1712\",\r\n            user: \"frank iva\",\r\n            date: \"1 Jun 2021\",\r\n            price: \"$400\",\r\n            status: \"paid\"\r\n        },\r\n        {\r\n            id: \"#OD1713\",\r\n            user: \"anthony baker\",\r\n            date: \"27 Jun 2021\",\r\n            price: \"$200\",\r\n            status: \"refund\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst orderStatus = {\r\n    \"shipping\": \"primary\",\r\n    \"pending\": \"warning\",\r\n    \"paid\": \"success\",\r\n    \"refund\": \"danger\"\r\n}\r\n\r\nconst renderOrderHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderOrderBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.id}</td>\r\n        <td>{item.user}</td>\r\n        <td>{item.price}</td>\r\n        <td>{item.date}</td>\r\n        <td>\r\n            <Badge type={orderStatus[item.status]} content={item.status}/>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nconst Dashboard = () => {\r\n\r\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-header\">Dashboard</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            statusCards.map((item, index) => (\r\n                                <div className=\"col-6\" key={index}>\r\n                                    <StatusCard\r\n                                        icon={item.icon}\r\n                                        count={item.count}\r\n                                        title={item.title}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"card full-height\">\r\n                        {/* chart */}\r\n                        <Chart\r\n                            options={themeReducer === 'theme-mode-dark' ? {\r\n                                ...chartOptions.options,\r\n                                theme: { mode: 'dark'}\r\n                            } : {\r\n                                ...chartOptions.options,\r\n                                theme: { mode: 'light'}\r\n                            }}\r\n                            series={chartOptions.series}\r\n                            type='line'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__header\">\r\n                            <h3>top customers</h3>\r\n                        </div>\r\n                        <div className=\"card__body\">\r\n                            <Table\r\n                                headData={topCustomers.head}\r\n                                renderHead={(item, index) => renderCusomerHead(item, index)}\r\n                                bodyData={topCustomers.body}\r\n                                renderBody={(item, index) => renderCusomerBody(item, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card__footer\">\r\n                            <Link to='/'>view all</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__header\">\r\n                            <h3>latest orders</h3>\r\n                        </div>\r\n                        <div className=\"card__body\">\r\n                            <Table\r\n                                headData={latestOrders.header}\r\n                                renderHead={(item, index) => renderOrderHead(item, index)}\r\n                                bodyData={latestOrders.body}\r\n                                renderBody={(item, index) => renderOrderBody(item, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card__footer\">\r\n                            <Link to='/'>view all</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\ProductColorBranch.jsx",["111"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from \"../components/table/Table\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\n// import listproductColorBranch from \"../assets/JsonData/productColorBranch.json\";\r\n\r\nconst productColorBranchTableHead = [\r\n  \"idPC-Branch\",\r\n  \"id-Branch\",\r\n  \"Name Product\",\r\n  \"Color\",\r\n  \"Price\",\r\n  \"Type\",\r\n  \"amount\",\r\n];\r\n\r\nconst ProductColorBranch = () => {\r\n  const [branchId, setBranchId] = useState(1);\r\n  const [dsFillter, setDsFillter] = useState([]);\r\n  const [listproductColorBranch, setListproductColorBranch] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [key, setKey] = useState(0);\r\n\r\n\r\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\r\n  const history = useHistory();\r\n  const renderBody = (item, index) => (\r\n    <tr key={index} onClick={() => HandleClickProductColorBranch(item.idBPC)}>\r\n      <td>{item.idBPC}</td>\r\n      <td>{item.idBranch}</td>\r\n      <td>{item.nameProduct}</td>\r\n      <td>{item.nameColor}</td>\r\n      <td>{item.price}</td>\r\n      <td>{item.type}</td>\r\n      <td>{item.amount}</td>\r\n    </tr>\r\n  );\r\n\r\n\r\n\r\n  // chuyển side working\r\n  function HandleClickProductColorBranch(idPCB) {\r\n    const idPCBtmp = idPCB ? idPCB : \"\";\r\n    history.push(`/productColorBranchWorkingPage/${idPCBtmp}`);\r\n    console.log(\"co click\");\r\n  }\r\n\r\n  const handleBranchFilter = (event) => {\r\n    const value = event.target.value;\r\n    console.log(event.target.value)\r\n    setBranchId(value)\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Gọi API hoặc lấy dữ liệu từ database tại đây\r\n    // Ví dụ:\r\n    fetch('https://localhost:8000/Admin/getBranchProductColor')\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        setListproductColorBranch(data)\r\n        setIsLoading(false)\r\n      }\r\n      )\r\n      .catch(err => console.error(err));\r\n  }, []); // Lưu ý tham số thứ hai của useEffect, truyền vào một mảng rỗng để useEffect chỉ chạy một lần khi component được mount\r\n\r\n  useEffect(() => {\r\n    const filteredList = listproductColorBranch.filter(\r\n      (item) => item.idBranch === parseInt(branchId)\r\n    );\r\n    setDsFillter(filteredList);\r\n    setKey(key + 1)\r\n  }, [branchId, listproductColorBranch]);\r\n\r\n\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n\r\n  return (\r\n    <div key={key}>\r\n      <h2 className=\"page-header\">Product- Color</h2>\r\n\r\n      <select\r\n        id=\"product-color-branch\"\r\n        name=\"product-color\"\r\n        className=\"select-color\"\r\n        value={branchId}\r\n        onChange={handleBranchFilter}\r\n      >\r\n        <option value=\"1\">Cửa Hàng 1</option>\r\n        <option value=\"2\">Cửa Hàng 2</option>\r\n        <option value=\"3\">Cửa Hàng 3</option>\r\n      </select>\r\n\r\n      <button\r\n        className=\"addProduct\"\r\n        onClick={() => HandleClickProductColorBranch(null)}\r\n      >\r\n        Thêm\r\n      </button>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card__body\">\r\n              <Table\r\n                limit=\"10\"\r\n                headData={productColorBranchTableHead}\r\n                renderHead={(item, index) => renderHead(item, index)}\r\n                bodyData={dsFillter}\r\n                renderBody={(item, index) => renderBody(item, index)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductColorBranch;\r\n","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\Products.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\ProductWorkingPage.jsx",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\ProductColorBranchWorkingPage.jsx",["131","132","133","134"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./css/PCB.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction ProductColorBranchWorkingPage() {\r\n\r\n  const [idProductColor, setIdProductColor] = useState(\"\");\r\n  const [idBranch, setIdBranch] = useState(1);\r\n  const [productQuantity, setProductQuantity] = useState(\"\");\r\n  const { idbpc } = useParams();\r\n  const [key, setKey] = useState(0);\r\n\r\n  // get BPC\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    if (idbpc) {\r\n      fetch(`https://localhost:8000/Admin/getInforOfAProductColorInBranch/${idbpc}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n          setIdProductColor(data.idPC)\r\n          setIdBranch(data.idBranch)\r\n          setData(data)\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://localhost:8000/Admin/getProductColor-Product/${idProductColor}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n\r\n        // setIdBranch(data.idBranch)\r\n        setData(data)\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, [idProductColor]);\r\n\r\n\r\n\r\n  // Hàm xử lý submit form\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (idProductColor == \"\") {\r\n      console.log(\"gia trin idProductColor la \", idProductColor)\r\n      Swal.fire({\r\n        title: \"Thêm Thất Bại\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"OK\",\r\n      })\r\n      return;\r\n    }\r\n\r\n\r\n    if (!idbpc) // thêm sp\r\n    {\r\n      const dataToSend = {\r\n        idBPPC: 0,\r\n        idPC: idProductColor,\r\n        idBranch: idBranch,\r\n        amount: productQuantity\r\n      };\r\n\r\n      console.log(dataToSend)\r\n      fetch('https://localhost:8000/Admin/addInforOfAProductColorInBranch', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(dataToSend)\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log('Response:', data);\r\n          if (data.value == 1) {\r\n            Swal.fire({\r\n              title: \"Thêm Thành Công\",\r\n              icon: \"success\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                // Thực hiện các thao tác cần thiết thêm khi xóa thành công\r\n                clearForm();\r\n              }\r\n            })\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Thêm Thất Bại\",\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            })\r\n          }\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    // cập nhật branch-product-color\r\n\r\n\r\n  }\r\n\r\n\r\n  const clearForm = () => {\r\n    setIdProductColor(\"\");\r\n    setIdBranch(\"\");\r\n    setProductQuantity(\"\");\r\n    setKey(key + 1)\r\n  };\r\n\r\n  // Hàm xử lý xóa sản phẩm\r\n  function handleDelete(idProduct) {\r\n    Swal.fire({\r\n      title: \"Bạn có chắc chắn muốn xóa comment này không?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Xóa\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n\r\n        fetch(`https://localhost:8000/Admin/deleteInforOfAProductColorInBranch/${idbpc}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            console.log(data);\r\n            if (data.value == 1) {\r\n              console.log('Product successfully deleted');\r\n              Swal.fire({\r\n                title: \"Xóa Thành Công\",\r\n                icon: \"success\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"OK\",\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                  // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n                  clearForm();\r\n                }\r\n              })\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error deleting product:', error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"pcb-container\" key={key}>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"pcb-item\">\r\n          <select\r\n            id=\"product-color\"\r\n            name=\"product-color\"\r\n            className=\"select-color\"\r\n            value={idBranch}\r\n            onChange={(e) => setIdBranch(e.target.value)}\r\n            disabled={idbpc ? true : false}\r\n          >\r\n            <option value=\"1\">Cửa Hàng 1</option>\r\n            <option value=\"2\">Cửa Hàng 2</option>\r\n            <option value=\"3\">Cửa Hàng 3</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-name\">Mã sản phẩm - màu sắc: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"product-name\"\r\n            value={data.idPC}\r\n            onChange={(e) => setIdProductColor(e.target.value)}\r\n            disabled={idbpc ? true : false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-name\">Tên sản phẩm: {data.nameProduct}</label>\r\n        </div>\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-color\">Màu sắc: {data.color} </label>\r\n        </div>\r\n\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-price\">Giá: {data.price} </label>\r\n        </div>\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-quantity\">Số lượng:  </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"product-quantity\"\r\n            value={data.amount}\r\n            onChange={(e) => setProductQuantity(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"submit_button\" type=\"submit\">\r\n          OK\r\n        </button>\r\n        <button\r\n          className=\"submit_button delete_button\"\r\n          type=\"button\"\r\n          onClick={handleDelete}\r\n        >\r\n          Xóa\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductColorBranchWorkingPage;\r\n","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\StatisticalPage.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\ProductColorWorkingPage.jsx",["135","136","137","138","139"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./css/ProductColorWorkingPage.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nfunction ProductColorWorkingPage() {\r\n\r\n\r\n  const [productCode, setProductCode] = useState(\"\");\r\n  const [productColor, setProductColor] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const { idPC } = useParams();\r\n\r\n  //data là PC gọi lên khi click\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`https://localhost:8000/Admin/getProductColor/${idPC}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setProductCode(data.idProductId)\r\n        setProductColor(data.nameColorId)\r\n        setProductPrice(data.price)\r\n        setData(data)\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n\r\n  function clearForm() {\r\n    setProductCode(\"\");\r\n    setProductColor(\"\");\r\n    setProductPrice(\"\");\r\n  }\r\n\r\n  const handleProductCodeChange = (event) => {\r\n    setProductCode(event.target.value);\r\n  };\r\n\r\n  const handleProductColorChange = (event) => {\r\n    setProductColor(event.target.value);\r\n  };\r\n\r\n  const handleProductPriceChange = (event) => {\r\n    setProductPrice(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // thêm sản phẩm - color\r\n    if (!idPC) {\r\n      const dataToSend = {\r\n        id: 0,\r\n        price: parseFloat(productPrice),\r\n        idProduct_Id: parseInt(productCode),\r\n        nameColor_Id: productColor\r\n      };\r\n\r\n      console.log(dataToSend)\r\n      fetch('https://localhost:8000/Admin/addProductColor', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(dataToSend)\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log('Response:', data);\r\n          if (data.value == 1) {\r\n            Swal.fire({\r\n              title: \"Thêm Thành Công\",\r\n              icon: \"success\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n                clearForm();\r\n              }\r\n            })\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Thêm Thất Bại\",\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            })\r\n          }\r\n        })\r\n        .catch(error => console.error(error));\r\n\r\n    }\r\n\r\n\r\n    // cập nhật sửa  sản phẩm-color\r\n    if (idPC) {\r\n      const dataToSend = {\r\n        id: idPC,\r\n        price: parseFloat(productPrice),\r\n        idProduct_Id: parseInt(productCode),\r\n        nameColor_Id: productColor\r\n      };\r\n\r\n      console.log(dataToSend)\r\n      fetch('https://localhost:8000/Admin/updateProductColor', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(dataToSend)\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log('Response:', data);\r\n          if (data.value == 1) {\r\n            Swal.fire({\r\n              title: \"Sửa Thành Công\",\r\n              icon: \"success\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n                clearForm();\r\n              }\r\n            })\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Thêm Thất Bại\",\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            })\r\n          }\r\n        })\r\n        .catch(error => console.error(error));\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  // xử lý xóa sản phẩm\r\n  function handleDelete(idProduct) {\r\n    Swal.fire({\r\n      title: \"Bạn có chắc chắn muốn xóa comment này không?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Xóa\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n\r\n        fetch(`https://localhost:8000/Admin/deleteProductColor/${idPC}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            console.log(data);\r\n            if (data.value == 1) {\r\n              console.log('Product successfully deleted');\r\n              Swal.fire({\r\n                title: \"Xóa Thành Công\",\r\n                icon: \"success\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"OK\",\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                  // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n                  clearForm();\r\n                }\r\n              })\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error deleting product:', error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {idPC ? <h1>MÃ Product-Color {idPC}</h1> : null}\r\n      <form className=\"ProductColorWorkingPage-Container\" onSubmit={handleSubmit}>\r\n\r\n\r\n        <div className=\"ProductColorWorkingPage-Item\">\r\n          <label htmlFor=\"product-code\">Mã sản phẩm:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"product-code\"\r\n            name=\"product-code\"\r\n            value={productCode}\r\n            onChange={handleProductCodeChange}\r\n            disabled={idPC ? true : false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"ProductColorWorkingPage-Item \">\r\n          <label htmlFor=\"product-color\">Màu sản phẩm:</label>\r\n          <select\r\n            id=\"product-color\"\r\n            name=\"product-color\"\r\n            className=\"select-color\"\r\n            value={productColor}\r\n            onChange={handleProductColorChange}\r\n            disabled={idPC ? true : false}\r\n          >\r\n            <option value=\"Đen\">Đen</option>\r\n            <option value=\"Trắng\">Trắng</option>\r\n            <option value=\"Vàng\">Vàng</option>\r\n            <option value=\"xanh\">Xanh</option>\r\n            <option value=\"Xám\">Xám</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"ProductColorWorkingPage-Item\">\r\n          <label htmlFor=\"product-price\">Giá sản phẩm:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"product-price\"\r\n            name=\"product-price\"\r\n            value={productPrice}\r\n            onChange={handleProductPriceChange}\r\n          />\r\n        </div>\r\n\r\n        <button className=\"submit_button\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          className=\"submit_button delete_button\"\r\n          type=\"button\"\r\n          onClick={() => handleDelete(idPC)}\r\n        >\r\n          Xóa\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductColorWorkingPage;\r\n","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\StatisticalMonthOfBranch.jsx",["140","141","142"],"import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport \"./css/StatisticalBranchOfMonth.css\";\r\n\r\nfunction StatisticalMonthOfBranch() {\r\n  const chartRef = useRef(null);\r\n  const [month, setMonth] = useState(\"1\");\r\n  const [selectedYear, setSelectedYear] = useState(\"\");\r\n  // data \r\n  const [data, setData] = useState([]);\r\n  const [nameBranch, setNameBranch] = useState([]);\r\n  const [valueStatistical, setValueStatistical] = useState([]);\r\n\r\n\r\n\r\n  // Handle select change\r\n  const handleYearSelect = (event) => {\r\n    setSelectedYear(event.target.value);\r\n  };\r\n  // Create an array with the last 3 years\r\n  const currentYear = new Date().getFullYear();\r\n  const years = [currentYear, currentYear - 1, currentYear - 2];\r\n\r\n\r\n  const handleMonthSelect = (event) => {\r\n    setMonth(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const myChartRef = chartRef.current.getContext(\"2d\");\r\n\r\n    new Chart(myChartRef, {\r\n      type: \"pie\",\r\n      data: {\r\n        labels: nameBranch,\r\n        datasets: [\r\n          {\r\n            data: valueStatistical,\r\n            backgroundColor: [\"#04c88d\", \"#ff0000\", \"#fff800\"],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n      },\r\n    });\r\n\r\n\r\n\r\n    console.log(\"davo bieu do \", nameBranch, valueStatistical)\r\n  }, [data]); // thay đổi data khi goi song\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`https://localhost:8000/Admin/statisticalBranchsOfMonth/${selectedYear}/${month}`);\r\n        const jsonData = await response.json();\r\n\r\n\r\n        console.log(jsonData)\r\n\r\n        // lấy tên cửa hàng\r\n        var tmpName = []\r\n        for (var i = 0; i < jsonData.length; i++) {\r\n          tmpName.push(jsonData[i].nameBranch)\r\n        }\r\n        setNameBranch(tmpName)\r\n\r\n        // lấy thông số thống kê\r\n        var tmpValue = []\r\n        for (var i = 0; i < jsonData.length; i++) {\r\n          tmpValue.push(jsonData[i].statistical)\r\n        }\r\n        setValueStatistical(tmpValue)\r\n        setData(jsonData);\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [month, selectedYear]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n        Doanh Thu Trong Tháng của các cửa hàng\r\n      </h1>\r\n      <select\r\n        id=\"month\"\r\n        name=\"month\"\r\n        className=\"select-month selectType\"\r\n        value={month}\r\n        onChange={handleMonthSelect}\r\n      >\r\n        <option value=\"1\">Tháng 1</option>\r\n        <option value=\"2\">Tháng 2</option>\r\n        <option value=\"3\">Tháng 3</option>\r\n        <option value=\"4\">Tháng 4</option>\r\n        <option value=\"5\">Tháng 5</option>\r\n        <option value=\"6\">Tháng 6</option>\r\n        <option value=\"7\">Tháng 7</option>\r\n        <option value=\"8\">Tháng 8</option>\r\n        <option value=\"9\">Tháng 9</option>\r\n        <option value=\"10\">Tháng 10</option>\r\n        <option value=\"11\">Tháng 11</option>\r\n        <option value=\"12\">Tháng 12</option>\r\n      </select>\r\n\r\n      <select\r\n        id=\"year\"\r\n        name=\"year\"\r\n        className=\"select-year selectType\"\r\n        value={selectedYear}\r\n        onChange={handleYearSelect}\r\n      >\r\n        <option value=\"\">-- Chọn năm --</option>\r\n        {years.map((year) => (\r\n          <option key={year} value={year}>\r\n            {year}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <div className=\"pieChart-container\">\r\n        <div className=\"pieChart-container-chart\">\r\n          {/* <div className=\"pieChart-container\"> */}\r\n          <canvas id=\"myChart\" ref={chartRef} width={10} height={10} />\r\n          {/* </div> */}\r\n        </div>\r\n\r\n        <div className=\"box-item-container\">\r\n\r\n          {data.map((item) => (\r\n            <div className=\"box-item-number\">\r\n              <h1>{item.nameBranch} Doanh Thu :{item.statistical} </h1>\r\n            </div>\r\n          ))}\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatisticalMonthOfBranch;\r\n","C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\pages\\StatisticalCommonProductSales.jsx",["143","144","145"],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\thememenu\\ThemeMenu.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\dropdown\\Dropdown.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\badge\\Badge.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\table\\Table.jsx",[],"C:\\Users\\Admin\\Desktop\\REACTADMINCELLPHONES\\ReactAdminCellphones\\src\\components\\status-card\\StatusCard.jsx",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":16,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":72,"column":6,"nodeType":"156","endLine":72,"endColumn":40,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"158","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"159","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":19},{"ruleId":"150","severity":1,"message":"160","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":20},{"ruleId":"150","severity":1,"message":"161","line":11,"column":10,"nodeType":"152","messageId":"153","endLine":11,"endColumn":15},{"ruleId":"150","severity":1,"message":"162","line":43,"column":5,"nodeType":"152","messageId":"153","endLine":43,"endColumn":18},{"ruleId":"150","severity":1,"message":"163","line":49,"column":9,"nodeType":"152","messageId":"153","endLine":49,"endColumn":19},{"ruleId":"150","severity":1,"message":"164","line":50,"column":9,"nodeType":"152","messageId":"153","endLine":50,"endColumn":19},{"ruleId":"150","severity":1,"message":"165","line":67,"column":10,"nodeType":"152","messageId":"153","endLine":67,"endColumn":18},{"ruleId":"150","severity":1,"message":"166","line":67,"column":20,"nodeType":"152","messageId":"153","endLine":67,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":178,"column":12,"nodeType":"169","messageId":"170","endLine":178,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":181,"column":14,"nodeType":"169","messageId":"170","endLine":181,"endColumn":16},{"ruleId":"167","severity":1,"message":"168","line":262,"column":32,"nodeType":"169","messageId":"170","endLine":262,"endColumn":34},{"ruleId":"150","severity":1,"message":"171","line":294,"column":9,"nodeType":"152","messageId":"153","endLine":294,"endColumn":25},{"ruleId":"150","severity":1,"message":"172","line":298,"column":9,"nodeType":"152","messageId":"153","endLine":298,"endColumn":32},{"ruleId":"150","severity":1,"message":"173","line":302,"column":9,"nodeType":"152","messageId":"153","endLine":302,"endColumn":25},{"ruleId":"150","severity":1,"message":"174","line":343,"column":9,"nodeType":"152","messageId":"153","endLine":343,"endColumn":26},{"ruleId":"150","severity":1,"message":"175","line":347,"column":9,"nodeType":"152","messageId":"153","endLine":347,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":403,"column":28,"nodeType":"169","messageId":"170","endLine":403,"endColumn":30},{"ruleId":"167","severity":1,"message":"168","line":628,"column":17,"nodeType":"169","messageId":"170","endLine":628,"endColumn":19},{"ruleId":"154","severity":1,"message":"176","line":28,"column":6,"nodeType":"156","endLine":28,"endColumn":8,"suggestions":"177"},{"ruleId":"167","severity":1,"message":"168","line":47,"column":24,"nodeType":"169","messageId":"170","endLine":47,"endColumn":26},{"ruleId":"167","severity":1,"message":"168","line":81,"column":26,"nodeType":"169","messageId":"170","endLine":81,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":143,"column":28,"nodeType":"169","messageId":"170","endLine":143,"endColumn":30},{"ruleId":"150","severity":1,"message":"178","line":14,"column":10,"nodeType":"152","messageId":"153","endLine":14,"endColumn":14},{"ruleId":"154","severity":1,"message":"179","line":25,"column":6,"nodeType":"156","endLine":25,"endColumn":8,"suggestions":"180"},{"ruleId":"167","severity":1,"message":"168","line":69,"column":26,"nodeType":"169","messageId":"170","endLine":69,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":119,"column":26,"nodeType":"169","messageId":"170","endLine":119,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":174,"column":28,"nodeType":"169","messageId":"170","endLine":174,"endColumn":30},{"ruleId":"150","severity":1,"message":"181","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"182","line":52,"column":6,"nodeType":"156","endLine":52,"endColumn":12,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":73,"column":18,"nodeType":"152","messageId":"186","endLine":73,"endColumn":19},{"ruleId":"150","severity":1,"message":"181","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"187","line":59,"column":6,"nodeType":"156","endLine":59,"endColumn":12,"suggestions":"188"},{"ruleId":"184","severity":1,"message":"185","line":81,"column":18,"nodeType":"152","messageId":"186","endLine":81,"endColumn":19},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array. You can also do a functional update 'setKey(k => ...)' if you only need 'key' in the 'setKey' call.","ArrayExpression",["191"],"'Table' is defined but never used.","'productList' is defined but never used.","'useHistory' is defined but never used.","'Image' is defined but never used.","'productWithID' is assigned a value but never used.","'preset_key' is assigned a value but never used.","'cloud_name' is assigned a value but never used.","'listLink' is assigned a value but never used.","'setListLink' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleNameChange' is assigned a value but never used.","'handleManufactureChange' is assigned a value but never used.","'handleTypeChange' is assigned a value but never used.","'handleTitleChange' is assigned a value but never used.","'handleContentChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'idbpc'. Either include it or remove the dependency array.",["192"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'idPC'. Either include it or remove the dependency array.",["193"],"'Fragment' is defined but never used.","React Hook useEffect has missing dependencies: 'nameBranch' and 'valueStatistical'. Either include them or remove the dependency array.",["194"],"no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'amountOfProduct' and 'listNameProduct'. Either include them or remove the dependency array.",["195"],"no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [branchId, key, listproductColorBranch]",{"range":"206","text":"207"},"Update the dependencies array to be: [idbpc]",{"range":"208","text":"209"},"Update the dependencies array to be: [idPC]",{"range":"210","text":"211"},"Update the dependencies array to be: [data, nameBranch, valueStatistical]",{"range":"212","text":"213"},"Update the dependencies array to be: [amountOfProduct, data, listNameProduct]",{"range":"214","text":"215"},[2216,2250],"[branchId, key, listproductColorBranch]",[878,880],"[idbpc]",[858,860],"[idPC]",[1388,1394],"[data, nameBranch, valueStatistical]",[1713,1719],"[amountOfProduct, data, listNameProduct]"]