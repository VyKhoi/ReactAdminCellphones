[{"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\UserLogin.jsx":"3","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\ProductColor.jsx":"4","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\Products.jsx":"5","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\Dashboard.jsx":"6","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\Customers.jsx":"7","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\layout\\Layout.jsx":"8","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\context\\userLogin\\userLogin.jsx":"9","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\redux\\reducers\\index.js":"10","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\redux\\actions\\ThemeAction.js":"11","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\Routes.jsx":"12","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\badge\\Badge.jsx":"13","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\status-card\\StatusCard.jsx":"14","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\table\\Table.jsx":"15","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\sidebar\\Sidebar.jsx":"16","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\topnav\\TopNav.jsx":"17","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\redux\\reducers\\ThemeReducer.js":"18","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\ProductColorWorkingPage.jsx":"19","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\ProductColorBranch.jsx":"20","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\ProductWorkingPage.jsx":"21","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\StatisticalPage.jsx":"22","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\ProductColorBranchWorkingPage.jsx":"23","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\StatisticalMonthOfBranch.jsx":"24","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\StatisticalCommonProductSales.jsx":"25","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\dropdown\\Dropdown.jsx":"26","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\thememenu\\ThemeMenu.jsx":"27"},{"size":1878,"mtime":1697729223738,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1697714208806,"results":"30","hashOfConfig":"29"},{"size":4367,"mtime":1697725866288,"results":"31","hashOfConfig":"29"},{"size":2427,"mtime":1697714208786,"results":"32","hashOfConfig":"29"},{"size":2557,"mtime":1697729925326,"results":"33","hashOfConfig":"29"},{"size":5871,"mtime":1697714208786,"results":"34","hashOfConfig":"29"},{"size":2252,"mtime":1697728664162,"results":"35","hashOfConfig":"29"},{"size":1293,"mtime":1697714208786,"results":"36","hashOfConfig":"29"},{"size":414,"mtime":1697714208786,"results":"37","hashOfConfig":"29"},{"size":167,"mtime":1697714208806,"results":"38","hashOfConfig":"29"},{"size":390,"mtime":1697714208805,"results":"39","hashOfConfig":"29"},{"size":2085,"mtime":1697714208770,"results":"40","hashOfConfig":"29"},{"size":229,"mtime":1697714208786,"results":"41","hashOfConfig":"29"},{"size":467,"mtime":1697714208786,"results":"42","hashOfConfig":"29"},{"size":2477,"mtime":1697714208786,"results":"43","hashOfConfig":"29"},{"size":1129,"mtime":1697714208786,"results":"44","hashOfConfig":"29"},{"size":3372,"mtime":1697714208786,"results":"45","hashOfConfig":"29"},{"size":416,"mtime":1697714208805,"results":"46","hashOfConfig":"29"},{"size":7857,"mtime":1697714208786,"results":"47","hashOfConfig":"29"},{"size":3546,"mtime":1697714208786,"results":"48","hashOfConfig":"29"},{"size":20400,"mtime":1697738659187,"results":"49","hashOfConfig":"29"},{"size":1202,"mtime":1697714208786,"results":"50","hashOfConfig":"29"},{"size":6851,"mtime":1697714208786,"results":"51","hashOfConfig":"29"},{"size":4197,"mtime":1697714208786,"results":"52","hashOfConfig":"29"},{"size":4859,"mtime":1697714208786,"results":"53","hashOfConfig":"29"},{"size":1872,"mtime":1697714208786,"results":"54","hashOfConfig":"29"},{"size":5057,"mtime":1697714208786,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"xwllp6",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\index.js",["124","125","126","127","128"],"import React, { useState, useContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { createStore } from \"redux\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport rootReducer from \"./redux/reducers\";\r\n\r\nimport \"./assets/boxicons-2.0.7/css/boxicons.min.css\";\r\nimport \"./assets/css/grid.css\";\r\nimport \"./assets/css/theme.css\";\r\nimport \"./assets/css/index.css\";\r\n\r\nimport Layout from \"./components/layout/Layout\";\r\nimport { Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\r\nimport Login from \"./pages/UserLogin\";\r\nimport UserContextProvider from \"./context/userLogin/userLogin\";\r\nimport Customers from \"./pages/Customers\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport ProductColor from \"./pages/ProductColor\";\r\nimport Products from \"./pages/Products\";\r\n// import { UserContext } from \"./context/userLogin/userLogin.jsx\";\r\nconst store = createStore(rootReducer);\r\n\r\ndocument.title = \"Tua CRM\";\r\n\r\nconst App = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  // const { user, setUser } = useContext(UserContext);\r\n  return (\r\n    <Provider store={store}>\r\n      <React.StrictMode>\r\n        <UserContextProvider>\r\n          <HashRouter>\r\n            <Switch>\r\n              <Route\r\n                path=\"/login\"\r\n                exact\r\n                render={(props) => (\r\n                  <Login {...props} setIsLoggedIn={setIsLoggedIn} />\r\n                )}\r\n              />\r\n\r\n              {isLoggedIn ? (\r\n                <Route path=\"/layout\" component={Layout} />\r\n              ) : (\r\n                <Redirect to=\"/login\" />\r\n              )}\r\n            </Switch>\r\n          </HashRouter>\r\n        </UserContextProvider>\r\n      </React.StrictMode>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nreportWebVitals();\r\n",["129","130"],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\UserLogin.jsx",["131","132","133","134","135","136","137"],"import React, { Fragment, useRef, useEffect, useContext } from \"react\";\r\nimport \"./css/StyleLogin.css\";\r\nimport styles from \"./css/bootstrap.min.css\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport { UserContext } from \"../context/userLogin/userLogin\";\r\nimport Layout from \"../components/layout/Layout\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nfunction Login(props) {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const { user, setUser } = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [userName, setUsername] = useState(null);\r\n  const [passWord, setPassword] = useState(null);\r\n\r\n  const [checkLogin, setCheckLogin] = useState(1);\r\n\r\n  function handleSubmit(event) {\r\n    console.log({ userName, passWord });\r\n\r\n    event.preventDefault();\r\n    fetch(\"https://localhost:7242/api/v1/auth/login/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userName, passWord }),\r\n      mode: \"cors\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log(\"dât fetch dc\", data);\r\n        // let user_curent = JSON.parse(data.data); //dôi tuong\r\n\r\n        // localStorage.setItem(\"user\", JSON.stringify(user_curent)); // luu vao local json\r\n        setUser(data.data);\r\n        console.log(\"user trong context \", user);\r\n        setCheckLogin(1);\r\n\r\n        if (user && user.userRoles[0] === \"manager\") {\r\n          console.log(\"co vô đây\");\r\n          props.setIsLoggedIn(true);\r\n          history.push(\"/layout\");\r\n        }\r\n        setCheckLogin(0);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        console.log(\"no bi loi\");\r\n        setCheckLogin(0);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"container_login_box d-block\">\r\n        <div className=\"d-lg-flex half container_login\">\r\n          <div\r\n            className=\"bg order-1 order-md-2 img_login\"\r\n            style={{\r\n              backgroundImage:\r\n                \"url('https://wallpaperaccess.com/full/210902.jpg')\",\r\n            }}\r\n          ></div>\r\n          <div className=\"contents order-2 order-md-1\">\r\n            <div className=\"container\">\r\n              <div className=\"row align-items-center justify-content-center\">\r\n                <div className=\"col-md-7\">\r\n                  <h3>\r\n                    Login to <strong>Colorlib</strong>\r\n                  </h3>\r\n                  <p className=\"mb-4\">\r\n                    Lorem ipsum dolor sit amet elit. Sapiente sit aut eos\r\n                    consectetur adipisicing.\r\n                  </p>\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group first\">\r\n                      <label for=\"username\">Username</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        value={userName}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group last mb-3\">\r\n                      <label for=\"password\">Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={passWord}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    {checkLogin === 0 && (\r\n                      <p className=\"msgNotification\" style={{ color: \"red\" }}>\r\n                        <i class=\"fa-sharp fa-solid fa-lock\"></i> thông tin sai,\r\n                        xin nhập lại\r\n                      </p>\r\n                    )}\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"Log In\"\r\n                      className=\"btn btn-block btn-primary login_bt\"\r\n                    >\r\n                      Đăng Nhập\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\ProductColor.jsx",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\Products.jsx",["138"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from \"../components/table/Table\";\r\n// import productList from \"../assets/JsonData/productJson.json\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport \"./css/Products.css\";\r\n\r\nconst productHeader = [\"Id\", \"Name\", \"Name Manufacture\", \"Type\"];\r\nconst Products = () => {\r\n  const history = useHistory();\r\n\r\n  function handleClickProduct(idProduct) {\r\n    const productId = idProduct ? idProduct : \"\";\r\n    history.push(`/productsWorkingPage/${productId}`);\r\n    console.log(\"co click\");\r\n  }\r\n\r\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\r\n\r\n  const renderBody = (item, index) => (\r\n    <tr key={index} onClick={() => handleClickProduct(item.id)}>\r\n      <td>{item.id}</td>\r\n      <td>{item.name}</td>\r\n      <td>{item.manufactureName}</td>\r\n      <td>{item.type}</td>\r\n    </tr>\r\n  );\r\n\r\n  const [productList, setProductList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const requestBody = {\r\n    PageSize: 100,\r\n    PageIndex: 1,\r\n  };\r\n  useEffect(() => {\r\n    // Gọi API hoặc lấy dữ liệu từ database tại đây\r\n    // Ví dụ:\r\n \r\n    fetch(\"https://localhost:7242/product/products\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(requestBody),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setProductList(data.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, []); // Lưu ý tham số thứ hai của useEffect, truyền vào một mảng rỗng để useEffect chỉ chạy một lần khi component được mount\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\", margin: \"auto\" }}>Product</h1>\r\n\r\n      <button className=\"addProduct\" onClick={() => handleClickProduct(null)}>\r\n        Thêm\r\n      </button>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card__body\">\r\n              <Table\r\n                limit=\"10\"\r\n                headData={productHeader}\r\n                renderHead={(item, index) => renderHead(item, index)}\r\n                bodyData={productList}\r\n                renderBody={(item, index) => renderBody(item, index)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\Dashboard.jsx",["139"],"import React, { useEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Chart from \"react-apexcharts\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport StatusCard from \"../components/status-card/StatusCard\";\r\n\r\nimport Table from \"../components/table/Table\";\r\n\r\nimport Badge from \"../components/badge/Badge\";\r\n\r\nimport statusCards from \"../assets/JsonData/status-card-data.json\";\r\n\r\nconst chartOptions = {\r\n  series: [\r\n    {\r\n      name: \"Online Customers\",\r\n      data: [40, 70, 20, 90, 36, 80, 30, 91, 60],\r\n    },\r\n    {\r\n      name: \"Store Customers\",\r\n      data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10],\r\n    },\r\n  ],\r\n  options: {\r\n    color: [\"#6ab04c\", \"#2980b9\"],\r\n    chart: {\r\n      background: \"transparent\",\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n      ],\r\n    },\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    grid: {\r\n      show: false,\r\n    },\r\n  },\r\n};\r\n\r\nconst topCustomers = {\r\n  head: [\"user\", \"total orders\", \"total spending\"],\r\n  body: [\r\n    {\r\n      username: \"john doe\",\r\n      order: \"490\",\r\n      price: \"$15,870\",\r\n    },\r\n    {\r\n      username: \"frank iva\",\r\n      order: \"250\",\r\n      price: \"$12,251\",\r\n    },\r\n    {\r\n      username: \"anthony baker\",\r\n      order: \"120\",\r\n      price: \"$10,840\",\r\n    },\r\n    {\r\n      username: \"frank iva\",\r\n      order: \"110\",\r\n      price: \"$9,251\",\r\n    },\r\n    {\r\n      username: \"anthony baker\",\r\n      order: \"80\",\r\n      price: \"$8,840\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst renderCusomerHead = (item, index) => <th key={index}>{item}</th>;\r\n\r\nconst renderCusomerBody = (item, index) => (\r\n  <tr key={index}>\r\n    <td>{item.username}</td>\r\n    <td>{item.order}</td>\r\n    <td>{item.price}</td>\r\n  </tr>\r\n);\r\n\r\nconst latestOrders = {\r\n  header: [\"order id\", \"user\", \"total price\", \"date\", \"status\"],\r\n  body: [\r\n    {\r\n      id: \"#OD1711\",\r\n      user: \"john doe\",\r\n      date: \"17 Jun 2021\",\r\n      price: \"$900\",\r\n      status: \"shipping\",\r\n    },\r\n    {\r\n      id: \"#OD1712\",\r\n      user: \"frank iva\",\r\n      date: \"1 Jun 2021\",\r\n      price: \"$400\",\r\n      status: \"paid\",\r\n    },\r\n    {\r\n      id: \"#OD1713\",\r\n      user: \"anthony baker\",\r\n      date: \"27 Jun 2021\",\r\n      price: \"$200\",\r\n      status: \"pending\",\r\n    },\r\n    {\r\n      id: \"#OD1712\",\r\n      user: \"frank iva\",\r\n      date: \"1 Jun 2021\",\r\n      price: \"$400\",\r\n      status: \"paid\",\r\n    },\r\n    {\r\n      id: \"#OD1713\",\r\n      user: \"anthony baker\",\r\n      date: \"27 Jun 2021\",\r\n      price: \"$200\",\r\n      status: \"refund\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst orderStatus = {\r\n  shipping: \"primary\",\r\n  pending: \"warning\",\r\n  paid: \"success\",\r\n  refund: \"danger\",\r\n};\r\n\r\nconst renderOrderHead = (item, index) => <th key={index}>{item}</th>;\r\n\r\nconst renderOrderBody = (item, index) => (\r\n  <tr key={index}>\r\n    <td>{item.id}</td>\r\n    <td>{item.user}</td>\r\n    <td>{item.price}</td>\r\n    <td>{item.date}</td>\r\n    <td>\r\n      <Badge type={orderStatus[item.status]} content={item.status} />\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const themeReducer = useSelector((state) => state.ThemeReducer.mode);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-header\">Dashboard</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <div className=\"row\">\r\n            {statusCards.map((item, index) => (\r\n              <div className=\"col-6\" key={index}>\r\n                <StatusCard\r\n                  icon={item.icon}\r\n                  count={item.count}\r\n                  title={item.title}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <div className=\"card full-height\">\r\n            {/* chart */}\r\n            <Chart\r\n              options={\r\n                themeReducer === \"theme-mode-dark\"\r\n                  ? {\r\n                      ...chartOptions.options,\r\n                      theme: { mode: \"dark\" },\r\n                    }\r\n                  : {\r\n                      ...chartOptions.options,\r\n                      theme: { mode: \"light\" },\r\n                    }\r\n              }\r\n              series={chartOptions.series}\r\n              type=\"line\"\r\n              height=\"100%\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card__header\">\r\n              <h3>top customers</h3>\r\n            </div>\r\n            <div className=\"card__body\">\r\n              <Table\r\n                headData={topCustomers.head}\r\n                renderHead={(item, index) => renderCusomerHead(item, index)}\r\n                bodyData={topCustomers.body}\r\n                renderBody={(item, index) => renderCusomerBody(item, index)}\r\n              />\r\n            </div>\r\n            <div className=\"card__footer\">\r\n              <Link to=\"/\">view all</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <div className=\"card\">\r\n            <div className=\"card__header\">\r\n              <h3>latest orders</h3>\r\n            </div>\r\n            <div className=\"card__body\">\r\n              <Table\r\n                headData={latestOrders.header}\r\n                renderHead={(item, index) => renderOrderHead(item, index)}\r\n                bodyData={latestOrders.body}\r\n                renderBody={(item, index) => renderOrderBody(item, index)}\r\n              />\r\n            </div>\r\n            <div className=\"card__footer\">\r\n              <Link to=\"/\">view all</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\Customers.jsx",["140"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Table from \"../components/table/Table\";\r\n\r\n// import customerList from \"../assets/JsonData/customers-list.json\";\r\n\r\nconst customerTableHead = [\"Name\", \"Email\", \"Phone Number\", \"Hometown\"];\r\n\r\nconst renderHead = (item, index) => <th key={index}>{item}</th>;\r\n\r\nconst renderBody = (item, index) => (\r\n  <tr key={index} onClick={handleClickProduct}>\r\n    <td>{item.name}</td>\r\n    <td>{item.email}</td>\r\n    <td>{item.phoneNumber}</td>\r\n    <td>{item.hometown}</td>\r\n  </tr>\r\n);\r\n\r\nfunction handleClickProduct(idProduct) {\r\n  //   const navigate = useNavigate();\r\n  //   navigate(\"/new-page\");\r\n  console.log(idProduct);\r\n}\r\nconst Customers = () => {\r\n\r\n  const [customerList, setCustomerList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const requestBody = {\r\n    PageSize: 100,\r\n    PageIndex: 1,\r\n  };\r\n  \r\n  useEffect(() => {\r\n    // Gọi API hoặc lấy dữ liệu từ database tại đây\r\n    // Ví dụ:\r\n    fetch('https://localhost:7242/customer/search/name', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(requestBody),\r\n    })\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        setCustomerList(data.data)\r\n        setIsLoading(false)\r\n      }\r\n      )\r\n      .catch(err => console.error(err));\r\n  }, []); // Lưu ý tham số thứ hai của useEffect, truyền vào một mảng rỗng để useEffect chỉ chạy một lần khi component được mount\r\n\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-header\">customers</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card__body\">\r\n              <Table\r\n                limit=\"10\"\r\n                headData={customerTableHead}\r\n                renderHead={(item, index) => renderHead(item, index)}\r\n                bodyData={customerList}\r\n                renderBody={(item, index) => renderBody(item, index)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\layout\\Layout.jsx",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\context\\userLogin\\userLogin.jsx",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\redux\\reducers\\index.js",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\redux\\actions\\ThemeAction.js",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\Routes.jsx",["141","142","143","144"],"import React from \"react\";\r\n\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Dashboard from \"../pages/Dashboard\";\r\nimport Customers from \"../pages/Customers\";\r\nimport Products from \"../pages/Products\";\r\nimport ProductWorkingPage from \"../pages/ProductWorkingPage\";\r\nimport ProductColor from \"../pages/ProductColor\";\r\nimport ProductColorWorkingPage from \"../pages/ProductColorWorkingPage\";\r\nimport ProductColorBranch from \"../pages/ProductColorBranch\";\r\nimport ProductColorBranchWorkingPage from \"../pages/ProductColorBranchWorkingPage\";\r\nimport StatisticalPage from \"../pages/StatisticalPage\";\r\nimport StatisticalMonthOfBranch from \"../pages/StatisticalMonthOfBranch\";\r\nimport StatisticalCommonProductSales from \"../pages/StatisticalCommonProductSales\";\r\nimport Login from \"../pages/UserLogin\";\r\nimport Layout from \"./layout/Layout\";\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      {/* <Redirect to=\"/login\" /> */}\r\n      <Route path=\"/\" exact component={Dashboard} />\r\n      <Route exact path=\"/layout\" component={Dashboard} />\r\n\r\n      <Route path=\"/customers\" component={Customers} />\r\n      <Route path=\"/products\" component={Products}></Route>\r\n      <Route path=\"/products-color\" component={ProductColor}></Route>\r\n      <Route\r\n        path=\"/products-color-branch\"\r\n        component={ProductColorBranch}\r\n      ></Route>\r\n      <Route path=\"/statistical\" component={StatisticalPage}></Route>\r\n      <Route\r\n        path=\"/statisticalMonthOfBranch\"\r\n        component={StatisticalMonthOfBranch}\r\n      ></Route>\r\n      <Route\r\n        path=\"/statisticalCommonProductSales\"\r\n        component={StatisticalCommonProductSales}\r\n      ></Route>\r\n\r\n      <Route\r\n        path=\"/productColorsWorkingPage/:idPC?\"\r\n        component={ProductColorWorkingPage}\r\n      ></Route>\r\n      <Route path=\"/productsWorkingPage/:id?\" component={ProductWorkingPage} />\r\n\r\n      <Route\r\n        path=\"/productColorBranchWorkingPage/:idbpc?\"\r\n        component={ProductColorBranchWorkingPage}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\badge\\Badge.jsx",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\status-card\\StatusCard.jsx",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\table\\Table.jsx",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\sidebar\\Sidebar.jsx",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\topnav\\TopNav.jsx",["145","146"],"import React, { useContext } from \"react\";\r\n\r\nimport \"./topnav.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Dropdown from \"../dropdown/Dropdown\";\r\n\r\nimport ThemeMenu from \"../thememenu/ThemeMenu\";\r\n\r\nimport notifications from \"../../assets/JsonData/notification.json\";\r\n\r\nimport image from \"../../assets/images/tuat.png\";\r\n\r\nimport user_menu from \"../../assets/JsonData/user_menus.json\";\r\nimport { UserContext } from \"../../context/userLogin/userLogin\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nvar imageUser = { image: image };\r\nconst renderNotificationItem = (item, index) => (\r\n  <div className=\"notification-item\" key={index}>\r\n    <i className={item.icon}></i>\r\n    <span>{item.content}</span>\r\n  </div>\r\n);\r\n\r\nconst renderUserToggle = (user) => (\r\n  <div className=\"topnav__right-user\">\r\n    <div className=\"topnav__right-user__image\">\r\n      <img src={imageUser.image} alt=\"\" />\r\n    </div>\r\n    <div className=\"topnav__right-user__name\">{user.name}</div>\r\n  </div>\r\n);\r\n\r\nconst Topnav = () => {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const handleGoBack = () => {\r\n    localStorage.removeItem(\"user\");\r\n\r\n    history.go(0);\r\n  };\r\n\r\n  const renderUserMenu = (item, index) => {\r\n    if (item.content === \"Profile\") {\r\n      return (\r\n        <Link to=\"/profile\" key={index}>\r\n          <div className=\"notification-item\">\r\n            <i className={item.icon}></i>\r\n            <span>{item.content}</span>\r\n          </div>\r\n        </Link>\r\n      );\r\n    }\r\n    if (item.content === \"Settings\") {\r\n      return (\r\n        <Link to=\"/settings\" key={index}>\r\n          <div className=\"notification-item\">\r\n            <i className={item.icon}></i>\r\n            <span>{item.content}</span>\r\n          </div>\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    if (item.content === \"Logout\") {\r\n      return (\r\n        <div key={index} onClick={handleGoBack}>\r\n          <div className=\"notification-item\">\r\n            <i className={item.icon}></i>\r\n            <span>{item.content}</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"topnav\">\r\n      <div className=\"topnav__search\">\r\n        <input type=\"text\" placeholder=\"Search here...\" />\r\n        <i className=\"bx bx-search\"></i>\r\n      </div>\r\n      <div className=\"topnav__right\">\r\n        <div className=\"topnav__right-item\">\r\n          {/* dropdown here  */}\r\n          <Dropdown\r\n            customToggle={() => renderUserToggle(user)}\r\n            contentData={user_menu}\r\n            renderItems={(item, index) => renderUserMenu(item, index)}\r\n          />\r\n          {/* <div>\r\n            <img src=\"\"\r\n          </div>\r\n          <ul>\r\n            <li>Profile</li>\r\n            <li>Settings</li>\r\n            <li>Logout</li>\r\n          </ul> */}\r\n        </div>\r\n        <div className=\"topnav__right-item\">\r\n          <Dropdown\r\n            icon=\"bx bx-bell\"\r\n            badge=\"12\"\r\n            contentData={notifications}\r\n            renderItems={(item, index) => renderNotificationItem(item, index)}\r\n            renderFooter={() => <Link to=\"/\">View All</Link>}\r\n          />\r\n          {/* dropdown here */}\r\n        </div>\r\n        <div className=\"topnav__right-item\">\r\n          <ThemeMenu />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topnav;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\redux\\reducers\\ThemeReducer.js",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\ProductColorWorkingPage.jsx",["147","148","149","150","151"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./css/ProductColorWorkingPage.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nfunction ProductColorWorkingPage() {\r\n  const [productCode, setProductCode] = useState(\"\");\r\n  const [productColor, setProductColor] = useState(\"Đen\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const { idPC } = useParams();\r\n\r\n  //data là PC gọi lên khi click\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`https://localhost:8000/Admin/getProductColor/${idPC}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setProductCode(data.idProductId);\r\n        setProductColor(data.nameColorId);\r\n        setProductPrice(data.price);\r\n        setData(data);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  function clearForm() {\r\n    setProductCode(\"\");\r\n    setProductColor(\"\");\r\n    setProductPrice(\"\");\r\n  }\r\n\r\n  const handleProductCodeChange = (event) => {\r\n    setProductCode(event.target.value);\r\n  };\r\n\r\n  const handleProductColorChange = (event) => {\r\n    setProductColor(event.target.value);\r\n  };\r\n\r\n  const handleProductPriceChange = (event) => {\r\n    setProductPrice(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // thêm sản phẩm - color\r\n    if (!idPC) {\r\n      const dataToSend = {\r\n        id: 0,\r\n        price: parseFloat(productPrice),\r\n        idProduct_Id: parseInt(productCode),\r\n        nameColor_Id: productColor,\r\n      };\r\n\r\n      console.log(dataToSend);\r\n      fetch(\"https://localhost:8000/Admin/addProductColor\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(dataToSend),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Response:\", data);\r\n          if (data.value == 1) {\r\n            Swal.fire({\r\n              title: \"Thêm Thành Công\",\r\n              icon: \"success\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n                clearForm();\r\n              }\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Thêm Thất Bại\",\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n\r\n    // cập nhật sửa  sản phẩm-color\r\n    if (idPC) {\r\n      const dataToSend = {\r\n        id: idPC,\r\n        price: parseFloat(productPrice),\r\n        idProduct_Id: parseInt(productCode),\r\n        nameColor_Id: productColor,\r\n      };\r\n\r\n      console.log(dataToSend);\r\n      fetch(\"https://localhost:8000/Admin/updateProductColor\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(dataToSend),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Response:\", data);\r\n          if (data.value == 1) {\r\n            Swal.fire({\r\n              title: \"Sửa Thành Công\",\r\n              icon: \"success\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n                clearForm();\r\n              }\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Thêm Thất Bại\",\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n  };\r\n\r\n  // xử lý xóa sản phẩm\r\n  function handleDelete(idProduct) {\r\n    Swal.fire({\r\n      title: \"Bạn có chắc chắn muốn xóa comment này không?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Xóa\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        fetch(`https://localhost:8000/Admin/deleteProductColor/${idPC}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            console.log(data);\r\n            if (data.value == 1) {\r\n              console.log(\"Product successfully deleted\");\r\n              Swal.fire({\r\n                title: \"Xóa Thành Công\",\r\n                icon: \"success\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"OK\",\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                  // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n                  clearForm();\r\n                }\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error deleting product:\", error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {idPC ? <h1>MÃ Product-Color {idPC}</h1> : null}\r\n      <form\r\n        className=\"ProductColorWorkingPage-Container\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className=\"ProductColorWorkingPage-Item\">\r\n          <label htmlFor=\"product-code\">Mã sản phẩm:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"product-code\"\r\n            name=\"product-code\"\r\n            value={productCode}\r\n            onChange={handleProductCodeChange}\r\n            disabled={idPC ? true : false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"ProductColorWorkingPage-Item \">\r\n          <label htmlFor=\"product-color\">Màu sản phẩm:</label>\r\n          <select\r\n            id=\"product-color\"\r\n            name=\"product-color\"\r\n            className=\"select-color\"\r\n            value={productColor}\r\n            onChange={handleProductColorChange}\r\n            disabled={idPC ? true : false}\r\n          >\r\n            <option value=\"Đen\">Đen</option>\r\n            <option value=\"Trắng\">Trắng</option>\r\n            <option value=\"Vàng\">Vàng</option>\r\n            <option value=\"xanh\">Xanh</option>\r\n            <option value=\"Xám\">Xám</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"ProductColorWorkingPage-Item\">\r\n          <label htmlFor=\"product-price\">Giá sản phẩm:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"product-price\"\r\n            name=\"product-price\"\r\n            value={productPrice}\r\n            onChange={handleProductPriceChange}\r\n          />\r\n        </div>\r\n\r\n        <button className=\"submit_button\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          className=\"submit_button delete_button\"\r\n          type=\"button\"\r\n          onClick={() => handleDelete(idPC)}\r\n        >\r\n          Xóa\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductColorWorkingPage;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\ProductColorBranch.jsx",["152"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from \"../components/table/Table\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\n// import listproductColorBranch from \"../assets/JsonData/productColorBranch.json\";\r\n\r\nconst productColorBranchTableHead = [\r\n  \"idPC-Branch\",\r\n  \"id-Branch\",\r\n  \"Name Product\",\r\n  \"Color\",\r\n  \"Price\",\r\n  \"Type\",\r\n  \"amount\",\r\n];\r\n\r\nconst ProductColorBranch = () => {\r\n  const [branchId, setBranchId] = useState(1);\r\n  const [dsFillter, setDsFillter] = useState([]);\r\n  const [listproductColorBranch, setListproductColorBranch] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [key, setKey] = useState(0);\r\n\r\n\r\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\r\n  const history = useHistory();\r\n  const renderBody = (item, index) => (\r\n    <tr key={index} onClick={() => HandleClickProductColorBranch(item.idBPC)}>\r\n      <td>{item.idBPC}</td>\r\n      <td>{item.idBranch}</td>\r\n      <td>{item.nameProduct}</td>\r\n      <td>{item.nameColor}</td>\r\n      <td>{item.price}</td>\r\n      <td>{item.type}</td>\r\n      <td>{item.amount}</td>\r\n    </tr>\r\n  );\r\n\r\n\r\n\r\n  // chuyển side working\r\n  function HandleClickProductColorBranch(idPCB) {\r\n    const idPCBtmp = idPCB ? idPCB : \"\";\r\n    history.push(`/productColorBranchWorkingPage/${idPCBtmp}`);\r\n    console.log(\"co click\");\r\n  }\r\n\r\n  const handleBranchFilter = (event) => {\r\n    const value = event.target.value;\r\n    console.log(event.target.value)\r\n    setBranchId(value)\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Gọi API hoặc lấy dữ liệu từ database tại đây\r\n    // Ví dụ:\r\n    fetch('https://localhost:8000/Admin/getBranchProductColor')\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        setListproductColorBranch(data)\r\n        setIsLoading(false)\r\n      }\r\n      )\r\n      .catch(err => console.error(err));\r\n  }, []); // Lưu ý tham số thứ hai của useEffect, truyền vào một mảng rỗng để useEffect chỉ chạy một lần khi component được mount\r\n\r\n  useEffect(() => {\r\n    const filteredList = listproductColorBranch.filter(\r\n      (item) => item.idBranch === parseInt(branchId)\r\n    );\r\n    setDsFillter(filteredList);\r\n    setKey(key + 1)\r\n  }, [branchId, listproductColorBranch]);\r\n\r\n\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n\r\n  return (\r\n    <div key={key}>\r\n      <h2 className=\"page-header\">Product- Color</h2>\r\n\r\n      <select\r\n        id=\"product-color-branch\"\r\n        name=\"product-color\"\r\n        className=\"select-color\"\r\n        value={branchId}\r\n        onChange={handleBranchFilter}\r\n      >\r\n        <option value=\"1\">Cửa Hàng 1</option>\r\n        <option value=\"2\">Cửa Hàng 2</option>\r\n        <option value=\"3\">Cửa Hàng 3</option>\r\n      </select>\r\n\r\n      <button\r\n        className=\"addProduct\"\r\n        onClick={() => HandleClickProductColorBranch(null)}\r\n      >\r\n        Thêm\r\n      </button>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card__body\">\r\n              <Table\r\n                limit=\"10\"\r\n                headData={productColorBranchTableHead}\r\n                renderHead={(item, index) => renderHead(item, index)}\r\n                bodyData={dsFillter}\r\n                renderBody={(item, index) => renderBody(item, index)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductColorBranch;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\ProductWorkingPage.jsx",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"import React from \"react\";\r\nimport Table from \"../components/table/Table\";\r\nimport productList from \"../assets/JsonData/productJson.json\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nimport \"./css/ProductWorkingPage.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"sweetalert2/dist/sweetalert2.min.css\";\r\n\r\n// var productWithID = {\r\n//   id: 1,\r\n//   name: \"Samsung J7\",\r\n//   manufacture: \"Samsung\",\r\n//   type: \"phone\",\r\n//   images: [\r\n//     {\r\n//       nameImage: \"Xanh\",\r\n//       urls: \"https://res.cloudinary.com/dl6y9cyqb/image/upload/v1682272442/sg3ippzaqpi9imkzku0p.jpg\",\r\n//     },\r\n//     {\r\n//       nameImage: \"Đen\",\r\n//       urls: \"https://res.cloudinary.com/dl6y9cyqb/image/upload/v1682272443/c5pwugnz14krhm1khree.png\",\r\n//     },\r\n//   ],\r\n\r\n//   title: \"Chiếc ddiejn thoại tuyệt vời\",\r\n//   content: \"Chiếc ddiejn thoại tuyệt vời lắm\",\r\n//   cpu: \"ádv\",\r\n//   ram: \"sadv\",\r\n//   rom: \"ádv\",\r\n//   graphicCard: \"\",\r\n//   battery: \"ádv\",\r\n//   os: \"ádv\",\r\n//   others: \"ádvsdv\",\r\n// };\r\n\r\nvar productWithID = {};\r\n// var productWithId = JSON.stringify(productJson);\r\n\r\nconst ProductWorkingPage = () => {\r\n  const [typeUI, setTypeUI] = useState(\"phone\");\r\n  //   confix cloudynary\r\n  const preset_key = \"\";\r\n  const cloud_name = \"\";\r\n\r\n  //  thực  hiện fectch xuống csdl để lấy tất cả thông tin sp\r\n  const [name, setName] = useState(\"\");\r\n  const [manufacture, setManufacture] = useState(\"\");\r\n  const [type, setType] = useState(0);\r\n  const [file, setFile] = useState([]);\r\n  const [descriptionImage, setDescriptionImage] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [cpu, setCpu] = useState(\"\");\r\n  const [ram, setRam] = useState(\"\");\r\n  const [rom, setRom] = useState(\"\");\r\n  const [graphicCard, setGraphicCard] = useState(\"\");\r\n  const [battery, setBattery] = useState(\"\");\r\n  const [os, setOs] = useState(\"\");\r\n  const [others, setOthers] = useState(\"\");\r\n  const [listLink, setListLink] = useState([]);\r\n\r\n  // khu làm việc với sửa và xóa\r\n  //  lấy id của sản phẩm\r\n  const { id } = useParams();\r\n\r\n  const [productWithID, setProductWithID] = useState([]);\r\n  //   khu vực lấy data khi click chọn 1 product\r\n  useEffect(() => {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    async function fetchProduct() {\r\n      try {\r\n        const response = await fetch(\r\n          `https://localhost:7242/product/getinforproduct/${id}`\r\n        );\r\n        const data = await response.json();\r\n\r\n        setProductWithID(data);\r\n        autoUpdateFrom(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n        //  chỉ test xem thôi\r\n      }\r\n    }\r\n    fetchProduct();\r\n  }, [id]);\r\n\r\n  function autoUpdateFrom(data) {\r\n    if (data.Name) {\r\n      setName(data.Name);\r\n    }\r\n    if (data.ManufactureName) {\r\n      setManufacture(data.ManufactureName);\r\n    }\r\n    if (data.type) {\r\n      setType(data.type);\r\n    }\r\n   \r\n    if (data.Title) {\r\n      setTitle(data.Title);\r\n    }\r\n    if (data.Content) {\r\n      setContent(data.Content);\r\n    }\r\n    if (data.CPU) {\r\n      setCpu(data.CPU);\r\n    }\r\n    if (data.RAM) {\r\n      setRam(data.RAM);\r\n    }\r\n    if (data.ROM) {\r\n      setRom(data.ROM);\r\n    }\r\n    if (data.GraphicCard) {\r\n      setGraphicCard(data.GraphicCard);\r\n    }\r\n    if (data.Battery) {\r\n      setBattery(data.Battery);\r\n    }\r\n    if (data.OperatorSystem) {\r\n      setOs(data.OperatorSystem);\r\n    }\r\n    if (data.Others) {\r\n      setOthers(data.Others);\r\n    }\r\n  }\r\n\r\n  function clearForm() {\r\n    setName(\"\");\r\n    setManufacture(\"\");\r\n    setType(0);\r\n    setFile([]);\r\n    setDescriptionImage(\"\");\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setCpu(\"\");\r\n    setRam(\"\");\r\n    setRom(\"\");\r\n    setGraphicCard(\"\");\r\n    setBattery(\"\");\r\n    setOs(\"\");\r\n    setOthers(\"\");\r\n  }\r\n\r\n  // ///////////\r\n  // hàm này dùng để thêm or sửa sản phẩm\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(\"id la \", id);\r\n\r\n    if (id == undefined) {\r\n      console.log(\"có vo if\");\r\n      var rs = CheckSelectNameImage();\r\n      if (rs == -1) {\r\n        console.log(\"có sai\");\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      const urls = await uploadFiles();\r\n      //   setListLink(urls);\r\n\r\n      var dsImage = [];\r\n      for (var i = 0; i < file.length; i++) {\r\n        var tmp = { nameImage: descriptionImage[i], images: urls[i] };\r\n        dsImage.push(tmp);\r\n      }\r\n      //   var dsImageJson = JSON.stringify(dsImage);\r\n      const data = {\r\n        Id: id,\r\n        Name: name,\r\n        ManufactureName: manufacture,\r\n        Type: type,\r\n        Images: dsImage,\r\n        Title: title,\r\n        Content: content,\r\n        CPU : cpu,\r\n       RAM : ram,\r\n       ROM : rom,\r\n       GraphicCard : graphicCard,\r\n       Battery :   battery,\r\n       OperatorSystem :  os,\r\n       Others:  others,\r\n      };\r\n\r\n      if (!id) {\r\n        // thêm sp\r\n        const response = await fetch(\r\n          \"https://localhost:7242/product\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n          }\r\n        );\r\n\r\n        const responseData = await response.json();\r\n        console.log(responseData);\r\n        if (responseData.hasOwnProperty(\"Id\")) {\r\n          Swal.fire({\r\n            title: \"Thêm Sản Phẩm Thành Công\",\r\n            icon: \"success\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"OK\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n              clearForm();\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Thêm Thất Bại\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      }\r\n\r\n      // cập nhật sp\r\n      if (id) {\r\n        const response = await fetch(\r\n          \"https://localhost:8000/Admin/updateProduct\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n          }\r\n        );\r\n\r\n        const responseData = await response.json();\r\n        console.log(responseData);\r\n        if (responseData.value == 1) {\r\n          Swal.fire({\r\n            title: \"Cập Nhật Sản Phẩm Thành Công\",\r\n            icon: \"success\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"OK\",\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n              clearForm();\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Cập Nhật Thất Bại\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"OK\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      clearForm();\r\n    }\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleManufactureChange = (event) => {\r\n    setManufacture(event.target.value);\r\n  };\r\n\r\n  const handleTypeChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const fileList = event.target.files;\r\n    console.log(event.target.files);\r\n    setFile(Array.from(fileList));\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    const formDataArray = file.map((f) => {\r\n      const formData = new FormData();\r\n      formData.append(\"upload_preset\", \"cellphonesvykhoi\");\r\n      formData.append(\"cloud_name\", \"dl6y9cyqb\");\r\n      formData.append(\"api_key\", \"357945813929283\");\r\n      formData.append(\"file\", f);\r\n      return formData;\r\n    });\r\n\r\n    try {\r\n      const responses = await Promise.all(\r\n        formDataArray.map((formData) =>\r\n          axios.post(\r\n            \"https://api.cloudinary.com/v1_1/dl6y9cyqb/image/upload\",\r\n            formData\r\n          )\r\n        )\r\n      );\r\n\r\n      const urls = responses.map((response) => response.data.secure_url);\r\n      console.log(urls);\r\n      return urls;\r\n      // Lưu đường dẫn của các hình ảnh đã upload vào database của bạn\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleContentChange = (event) => {\r\n    setContent(event.target.value);\r\n  };\r\n\r\n  const handleCpuChange = (event) => {\r\n    setCpu(event.target.value);\r\n  };\r\n\r\n  const handleRamChange = (event) => {\r\n    setRam(event.target.value);\r\n  };\r\n\r\n  const handleRomChange = (event) => {\r\n    setRom(event.target.value);\r\n  };\r\n\r\n  const handleGraphicCardChange = (event) => {\r\n    setGraphicCard(event.target.value);\r\n  };\r\n\r\n  const handleBatteryChange = (event) => {\r\n    setBattery(event.target.value);\r\n  };\r\n\r\n  const handleOsChange = (event) => {\r\n    setOs(event.target.value);\r\n  };\r\n\r\n  const handleOthersChange = (event) => {\r\n    console.log(others);\r\n    setOthers(event.target.value);\r\n  };\r\n\r\n  //   xử lý xóa sản phẩm\r\n  function DeleteHandle(idProduct) {\r\n    Swal.fire({\r\n      title: \"Bạn có chắc chắn muốn xóa comment này không?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Xóa\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // clearForm();\r\n\r\n        fetch(`https://localhost:8000/Admin/deleteProduct/${id}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            console.log(data);\r\n            if (data.value == 1) {\r\n              console.log(\"Product successfully deleted\");\r\n              Swal.fire({\r\n                title: \"Xóa Thành Công\",\r\n                icon: \"success\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"OK\",\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                  // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n                  clearForm();\r\n                }\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error deleting product:\", error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  function CheckSelectNameImage() {\r\n    console.log(type);\r\n    if (\r\n      type == \"phone\" &&\r\n      (descriptionImage.length !== 2 || file.length !== 2)\r\n    ) {\r\n      Swal.fire({\r\n        title: \"Vui lòng chọn đúng 2 hình và chọn name cho hình ảnh\",\r\n        icon: \"warning\",\r\n        showCancelButton: false,\r\n        confirmButtonColor: \"#3085d6\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProductWorkingPage__container\">\r\n      {/* <div>\r\n        {id && <p>Id của sản phẩm là: {id}</p>}\r\n        {!id && <h1>Không có sản phẩm</h1>}\r\n      </div> */}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"productBase_container\">\r\n          <div>\r\n            <label htmlFor=\"name\">Name:</label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"manufacture\">Manufacture:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"manufacture\"\r\n              value={manufacture}\r\n              onChange={(event) => setManufacture(event.target.value)}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              pointerEvents: id ? \"none\" : \"auto\",\r\n            }}\r\n          >\r\n            <label htmlFor=\"type\">Type:</label>\r\n            <select\r\n              className=\"selectType\"\r\n              id=\"type\"\r\n              value={type}\r\n              onChange={(event) => setType(event.target.value)}\r\n            >\r\n              <option value= \"0\">Phone</option>\r\n              <option value=\"1\">Laptop</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"productBaseImage_container\">\r\n          <div\r\n            className=\"productBaseImage_container_item\"\r\n            style={{\r\n              display: id ? \"none\" : \"block\",\r\n            }}\r\n          >\r\n            <label htmlFor=\"files\">Files:</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"files\"\r\n              multiple\r\n              // value={file}\r\n              onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n              <h3>Select mô tả màu sản phẩm</h3>\r\n              {file.map((fileItem, index) => (\r\n                <div key={index}>\r\n                  <label>{fileItem.name}</label>\r\n                  <select\r\n                    name=\"descriptionImage\"\r\n                    value={descriptionImage[index]}\r\n                    className=\"selectType\"\r\n                    onChange={(event) => {\r\n                      const updatedArray = [...descriptionImage];\r\n                      updatedArray[index] = event.target.value;\r\n                      setDescriptionImage(updatedArray);\r\n                    }}\r\n                    disabled={Object.keys(productWithID).length !== 0}\r\n                  >\r\n                    'Đen' 'Trắng' 'Vàng' 'Xám' 'Xanh'\r\n                    <option value=\"\">-- Select an option --</option>\r\n                    <option value=\"Đen\">Đen</option>\r\n                    <option value=\"Trắng\">Trắng</option>\r\n                    <option value=\"Vàng\">Vàng</option>\r\n                    <option value=\"Xám\">Xám</option>\r\n                    <option value=\"Xanh\">Xanh</option>\r\n                    {/* Thêm các tùy chọn khác nếu cần */}\r\n                  </select>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"productBaseImage_container_item\">\r\n            <label htmlFor=\"title\">Title:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(event) => setTitle(event.target.value)}\r\n            />\r\n            <h3 htmlFor=\"content\">Content:</h3>\r\n            <textarea\r\n              id=\"content\"\r\n              name=\"content\"\r\n              value={content}\r\n              onChange={(event) => setContent(event.target.value)}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        {/*Thông số của laptop*/}\r\n        {typeUI === \"laptop\" && (\r\n          <div className=\"productBaseSpecifications_container\">\r\n            <h1>Các thông số kỹ thuật</h1>\r\n            <div className=\"productBaseSpecifications_container_item\">\r\n              <label htmlFor=\"cpu\">CPU:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"cpu\"\r\n                name=\"CPU\"\r\n                value={cpu}\r\n                onChange={handleCpuChange}\r\n              />\r\n\r\n              <label htmlFor=\"ram\">RAM:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"ram\"\r\n                name=\"RAM\"\r\n                value={ram}\r\n                onChange={handleRamChange}\r\n              />\r\n\r\n              <label htmlFor=\"rom\">ROM:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"rom\"\r\n                name=\"ROM\"\r\n                value={rom}\r\n                onChange={handleRomChange}\r\n              />\r\n            </div>\r\n            <div className=\"productBaseSpecifications_container_item\">\r\n              <label htmlFor=\"graphic_card\">Card đồ họa:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"graphic_card\"\r\n                name=\"Graphic_Card\"\r\n                value={graphicCard}\r\n                onChange={handleGraphicCardChange}\r\n              />\r\n\r\n              <label htmlFor=\"battery\">Pin:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"battery\"\r\n                name=\"Battery\"\r\n                value={battery}\r\n                onChange={handleBatteryChange}\r\n              />\r\n\r\n              <label htmlFor=\"os\">Hệ điều hành:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"os\"\r\n                name=\"Operating_System\"\r\n                value={os}\r\n                onChange={handleOsChange}\r\n              />\r\n            </div>\r\n            <div className=\"productBaseSpecifications_container_item_orther\">\r\n              <label htmlFor=\"others\">Khác:</label>\r\n\r\n              <textarea\r\n                id=\"others\"\r\n                name=\"Others\"\r\n                value={others}\r\n                onChange={handleOthersChange}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/*Thông số của điện thoại*/}\r\n        {typeUI == \"phone\" && (\r\n          <div className=\"productBaseSpecifications_container\">\r\n            <h1>Các thông số kỹ thuật</h1>\r\n            <div className=\"productBaseSpecifications_container_item\">\r\n              <label htmlFor=\"cpu\">CPU:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"cpu\"\r\n                name=\"CPU\"\r\n                value={cpu}\r\n                onChange={handleCpuChange}\r\n              />\r\n\r\n              <label htmlFor=\"ram\">RAM:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"ram\"\r\n                name=\"RAM\"\r\n                value={ram}\r\n                onChange={handleRamChange}\r\n              />\r\n\r\n              <label htmlFor=\"rom\">ROM:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"rom\"\r\n                name=\"ROM\"\r\n                value={rom}\r\n                onChange={handleRomChange}\r\n              />\r\n            </div>\r\n            <div className=\"productBaseSpecifications_container_item\">\r\n              <label htmlFor=\"battery\">Pin:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"battery\"\r\n                name=\"Battery\"\r\n                value={battery}\r\n                onChange={handleBatteryChange}\r\n              />\r\n\r\n              <label htmlFor=\"os\">Hệ điều hành:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"os\"\r\n                name=\"Operating_System\"\r\n                value={os}\r\n                onChange={handleOsChange}\r\n              />\r\n            </div>\r\n            <div className=\"productBaseSpecifications_container_item_orther\">\r\n              <label htmlFor=\"others\">Khác:</label>\r\n\r\n              <textarea\r\n                id=\"others\"\r\n                name=\"Others\"\r\n                value={others}\r\n                onChange={handleOthersChange}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <button className=\"submit_button\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n\r\n        {id ? (\r\n          <button\r\n            className=\"submit_button delete_button\"\r\n            type=\"button\"\r\n            onClick={() => DeleteHandle(productWithID.id)}\r\n          >\r\n            Xóa\r\n          </button>\r\n        ) : null}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductWorkingPage;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\StatisticalPage.jsx",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\ProductColorBranchWorkingPage.jsx",["174","175","176","177"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./css/PCB.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction ProductColorBranchWorkingPage() {\r\n\r\n  const [idProductColor, setIdProductColor] = useState(\"\");\r\n  const [idBranch, setIdBranch] = useState(1);\r\n  const [productQuantity, setProductQuantity] = useState(\"\");\r\n  const { idbpc } = useParams();\r\n  const [key, setKey] = useState(0);\r\n\r\n  // get BPC\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    if (idbpc) {\r\n      fetch(`https://localhost:8000/Admin/getInforOfAProductColorInBranch/${idbpc}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n          setIdProductColor(data.idPC)\r\n          setIdBranch(data.idBranch)\r\n          setData(data)\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://localhost:8000/Admin/getProductColor-Product/${idProductColor}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n\r\n        // setIdBranch(data.idBranch)\r\n        setData(data)\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, [idProductColor]);\r\n\r\n\r\n\r\n  // Hàm xử lý submit form\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (idProductColor == \"\") {\r\n      console.log(\"gia trin idProductColor la \", idProductColor)\r\n      Swal.fire({\r\n        title: \"Thêm Thất Bại\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"OK\",\r\n      })\r\n      return;\r\n    }\r\n\r\n\r\n    if (!idbpc) // thêm sp\r\n    {\r\n      const dataToSend = {\r\n        idBPPC: 0,\r\n        idPC: idProductColor,\r\n        idBranch: idBranch,\r\n        amount: productQuantity\r\n      };\r\n\r\n      console.log(dataToSend)\r\n      fetch('https://localhost:8000/Admin/addInforOfAProductColorInBranch', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(dataToSend)\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log('Response:', data);\r\n          if (data.value == 1) {\r\n            Swal.fire({\r\n              title: \"Thêm Thành Công\",\r\n              icon: \"success\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                // Thực hiện các thao tác cần thiết thêm khi xóa thành công\r\n                clearForm();\r\n              }\r\n            })\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Thêm Thất Bại\",\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            })\r\n          }\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    // cập nhật branch-product-color\r\n\r\n\r\n  }\r\n\r\n\r\n  const clearForm = () => {\r\n    setIdProductColor(\"\");\r\n    setIdBranch(\"\");\r\n    setProductQuantity(\"\");\r\n    setKey(key + 1)\r\n  };\r\n\r\n  // Hàm xử lý xóa sản phẩm\r\n  function handleDelete(idProduct) {\r\n    Swal.fire({\r\n      title: \"Bạn có chắc chắn muốn xóa comment này không?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Xóa\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n\r\n        fetch(`https://localhost:8000/Admin/deleteInforOfAProductColorInBranch/${idbpc}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            console.log(data);\r\n            if (data.value == 1) {\r\n              console.log('Product successfully deleted');\r\n              Swal.fire({\r\n                title: \"Xóa Thành Công\",\r\n                icon: \"success\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                confirmButtonText: \"OK\",\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                  // Thực hiện các thao tác cần thiết sau khi xóa thành công\r\n                  clearForm();\r\n                }\r\n              })\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error deleting product:', error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"pcb-container\" key={key}>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"pcb-item\">\r\n          <select\r\n            id=\"product-color\"\r\n            name=\"product-color\"\r\n            className=\"select-color\"\r\n            value={idBranch}\r\n            onChange={(e) => setIdBranch(e.target.value)}\r\n            disabled={idbpc ? true : false}\r\n          >\r\n            <option value=\"1\">Cửa Hàng 1</option>\r\n            <option value=\"2\">Cửa Hàng 2</option>\r\n            <option value=\"3\">Cửa Hàng 3</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-name\">Mã sản phẩm - màu sắc: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"product-name\"\r\n            value={data.idPC}\r\n            onChange={(e) => setIdProductColor(e.target.value)}\r\n            disabled={idbpc ? true : false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-name\">Tên sản phẩm: {data.nameProduct}</label>\r\n        </div>\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-color\">Màu sắc: {data.color} </label>\r\n        </div>\r\n\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-price\">Giá: {data.price} </label>\r\n        </div>\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-quantity\">Số lượng:  </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"product-quantity\"\r\n            value={data.amount}\r\n            onChange={(e) => setProductQuantity(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"submit_button\" type=\"submit\">\r\n          OK\r\n        </button>\r\n        <button\r\n          className=\"submit_button delete_button\"\r\n          type=\"button\"\r\n          onClick={handleDelete}\r\n        >\r\n          Xóa\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductColorBranchWorkingPage;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\StatisticalMonthOfBranch.jsx",["178","179","180"],"import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport \"./css/StatisticalBranchOfMonth.css\";\r\n\r\nfunction StatisticalMonthOfBranch() {\r\n  const chartRef = useRef(null);\r\n  const [month, setMonth] = useState(\"1\");\r\n  const [selectedYear, setSelectedYear] = useState(\"\");\r\n  // data \r\n  const [data, setData] = useState([]);\r\n  const [nameBranch, setNameBranch] = useState([]);\r\n  const [valueStatistical, setValueStatistical] = useState([]);\r\n\r\n\r\n\r\n  // Handle select change\r\n  const handleYearSelect = (event) => {\r\n    setSelectedYear(event.target.value);\r\n  };\r\n  // Create an array with the last 3 years\r\n  const currentYear = new Date().getFullYear();\r\n  const years = [currentYear, currentYear - 1, currentYear - 2];\r\n\r\n\r\n  const handleMonthSelect = (event) => {\r\n    setMonth(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const myChartRef = chartRef.current.getContext(\"2d\");\r\n\r\n    new Chart(myChartRef, {\r\n      type: \"pie\",\r\n      data: {\r\n        labels: nameBranch,\r\n        datasets: [\r\n          {\r\n            data: valueStatistical,\r\n            backgroundColor: [\"#04c88d\", \"#ff0000\", \"#fff800\"],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n      },\r\n    });\r\n\r\n\r\n\r\n    console.log(\"davo bieu do \", nameBranch, valueStatistical)\r\n  }, [data]); // thay đổi data khi goi song\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`https://localhost:8000/Admin/statisticalBranchsOfMonth/${selectedYear}/${month}`);\r\n        const jsonData = await response.json();\r\n\r\n\r\n        console.log(jsonData)\r\n\r\n        // lấy tên cửa hàng\r\n        var tmpName = []\r\n        for (var i = 0; i < jsonData.length; i++) {\r\n          tmpName.push(jsonData[i].nameBranch)\r\n        }\r\n        setNameBranch(tmpName)\r\n\r\n        // lấy thông số thống kê\r\n        var tmpValue = []\r\n        for (var i = 0; i < jsonData.length; i++) {\r\n          tmpValue.push(jsonData[i].statistical)\r\n        }\r\n        setValueStatistical(tmpValue)\r\n        setData(jsonData);\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [month, selectedYear]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n        Doanh Thu Trong Tháng của các cửa hàng\r\n      </h1>\r\n      <select\r\n        id=\"month\"\r\n        name=\"month\"\r\n        className=\"select-month selectType\"\r\n        value={month}\r\n        onChange={handleMonthSelect}\r\n      >\r\n        <option value=\"1\">Tháng 1</option>\r\n        <option value=\"2\">Tháng 2</option>\r\n        <option value=\"3\">Tháng 3</option>\r\n        <option value=\"4\">Tháng 4</option>\r\n        <option value=\"5\">Tháng 5</option>\r\n        <option value=\"6\">Tháng 6</option>\r\n        <option value=\"7\">Tháng 7</option>\r\n        <option value=\"8\">Tháng 8</option>\r\n        <option value=\"9\">Tháng 9</option>\r\n        <option value=\"10\">Tháng 10</option>\r\n        <option value=\"11\">Tháng 11</option>\r\n        <option value=\"12\">Tháng 12</option>\r\n      </select>\r\n\r\n      <select\r\n        id=\"year\"\r\n        name=\"year\"\r\n        className=\"select-year selectType\"\r\n        value={selectedYear}\r\n        onChange={handleYearSelect}\r\n      >\r\n        <option value=\"\">-- Chọn năm --</option>\r\n        {years.map((year) => (\r\n          <option key={year} value={year}>\r\n            {year}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <div className=\"pieChart-container\">\r\n        <div className=\"pieChart-container-chart\">\r\n          {/* <div className=\"pieChart-container\"> */}\r\n          <canvas id=\"myChart\" ref={chartRef} width={10} height={10} />\r\n          {/* </div> */}\r\n        </div>\r\n\r\n        <div className=\"box-item-container\">\r\n\r\n          {data.map((item) => (\r\n            <div className=\"box-item-number\">\r\n              <h1>{item.nameBranch} Doanh Thu :{item.statistical} </h1>\r\n            </div>\r\n          ))}\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatisticalMonthOfBranch;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\pages\\StatisticalCommonProductSales.jsx",["181","182","183"],"import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport \"./css/StatisticalBranchOfMonth.css\";\r\n\r\nfunction StatisticalCommonProductSales() {\r\n  const chartRef = useRef(null);\r\n  const [month, setMonth] = useState(\"1\");\r\n  const [branchId, setBranchId] = useState(\"1\");\r\n  const [selectedYear, setSelectedYear] = useState(\"\");\r\n  /// get data\r\n  const [data, setData] = useState([]);\r\n  const [listNameProduct, setListNameProduct] = useState([]);\r\n  const [amountOfProduct, setAmountOfProduct] = useState([]);\r\n\r\n  // Create an array with the last 3 years\r\n  const currentYear = new Date().getFullYear();\r\n  const years = [currentYear, currentYear - 1, currentYear - 2];\r\n\r\n\r\n  // Handle select change\r\n  const handleYearSelect = (event) => {\r\n    console.log(event.target.value)\r\n    setSelectedYear(event.target.value);\r\n  };\r\n  // handle  selected month\r\n  const handleMonthSelect = (event) => {\r\n    console.log(event.target.value)\r\n    setMonth(event.target.value);\r\n  };\r\n\r\n  //handle select branchid\r\n  const handleBranchSelect = (event) => {\r\n    console.log(event.target.value)\r\n    setBranchId(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const myChartRef = chartRef.current.getContext(\"2d\");\r\n\r\n    new Chart(myChartRef, {\r\n      type: \"pie\",\r\n      data: {\r\n        labels: listNameProduct,\r\n        datasets: [\r\n          {\r\n            data: amountOfProduct,\r\n            backgroundColor: [\"#04c88d\", \"#ff0000\", \"#fff800\", \"gray\", \"pink\"],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n      },\r\n    });\r\n\r\n\r\n    console.log(listNameProduct, amountOfProduct)\r\n  }, [data]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`https://localhost:8000/Admin/statisticalTop5/${selectedYear}/${month}/${branchId}`);\r\n        const jsonData = await response.json();\r\n\r\n\r\n        console.log(jsonData)\r\n\r\n        // get  name product\r\n        var tmpName = []\r\n        for (var i = 0; i < jsonData.length; i++) {\r\n          tmpName.push(jsonData[i].nameProduct)\r\n        }\r\n        setListNameProduct(tmpName)\r\n\r\n        // get amount of each product \r\n        var tmpValue = []\r\n        for (var i = 0; i < jsonData.length; i++) {\r\n          tmpValue.push(jsonData[i].totalAmountSale)\r\n        }\r\n        setAmountOfProduct(tmpValue)\r\n\r\n\r\n        setData(jsonData);\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [month, selectedYear, branchId]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n        Doanh Thu Trong Tháng của các cửa hàng\r\n      </h1>\r\n      <select\r\n        id=\"month\"\r\n        name=\"month\"\r\n        className=\"select-month selectType\"\r\n        value={month}\r\n        onChange={handleMonthSelect}\r\n      >\r\n        <option value=\"1\">Tháng 1</option>\r\n        <option value=\"2\">Tháng 2</option>\r\n        <option value=\"3\">Tháng 3</option>\r\n        <option value=\"4\">Tháng 4</option>\r\n        <option value=\"5\">Tháng 5</option>\r\n        <option value=\"6\">Tháng 6</option>\r\n        <option value=\"7\">Tháng 7</option>\r\n        <option value=\"8\">Tháng 8</option>\r\n        <option value=\"9\">Tháng 9</option>\r\n        <option value=\"10\">Tháng 10</option>\r\n        <option value=\"11\">Tháng 11</option>\r\n        <option value=\"12\">Tháng 12</option>\r\n      </select>\r\n\r\n\r\n\r\n      <select\r\n        id=\"year\"\r\n        name=\"year\"\r\n        className=\"select-year selectType\"\r\n        value={selectedYear}\r\n        onChange={handleYearSelect}\r\n      >\r\n        <option value=\"\">-- Chọn năm --</option>\r\n        {years.map((year) => (\r\n          <option key={year} value={year}>\r\n            {year}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <select\r\n        id=\"month\"\r\n        name=\"month\"\r\n        className=\"select-month selectType\"\r\n        value={branchId}\r\n        onChange={handleBranchSelect}\r\n      >\r\n        <option value=\"1\">Cửa Hàng 1</option>\r\n        <option value=\"2\">Cửa Hàng 2</option>\r\n        <option value=\"3\">Cửa Hàng 3</option>\r\n      </select>\r\n\r\n\r\n      <div className=\"pieChart-container\">\r\n        <div className=\"pieChart-container-chart\">\r\n          {/* <div className=\"pieChart-container\"> */}\r\n          <canvas id=\"myChart\" ref={chartRef} width={10} height={10} />\r\n          {/* </div> */}\r\n        </div>\r\n\r\n        <div className=\"box-item-container\">\r\n          {data.map((item) => (\r\n            <div className=\"box-item-number\">\r\n              <h1>{item.nameProduct} : {item.totalAmountSale} SP</h1>\r\n            </div>\r\n          ))}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatisticalCommonProductSales;\r\n","C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\dropdown\\Dropdown.jsx",[],"C:\\Users\\HP\\Desktop\\SELLPHONE\\FE\\ReactAdminCellphones\\src\\components\\thememenu\\ThemeMenu.jsx",[],{"ruleId":"184","severity":1,"message":"185","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":37},{"ruleId":"184","severity":1,"message":"188","line":20,"column":8,"nodeType":"186","messageId":"187","endLine":20,"endColumn":17},{"ruleId":"184","severity":1,"message":"189","line":21,"column":8,"nodeType":"186","messageId":"187","endLine":21,"endColumn":17},{"ruleId":"184","severity":1,"message":"190","line":22,"column":8,"nodeType":"186","messageId":"187","endLine":22,"endColumn":20},{"ruleId":"184","severity":1,"message":"191","line":23,"column":8,"nodeType":"186","messageId":"187","endLine":23,"endColumn":16},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"184","severity":1,"message":"196","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"197","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":33},{"ruleId":"184","severity":1,"message":"198","line":1,"column":35,"nodeType":"186","messageId":"187","endLine":1,"endColumn":44},{"ruleId":"184","severity":1,"message":"199","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":14},{"ruleId":"184","severity":1,"message":"200","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":14},{"ruleId":"184","severity":1,"message":"201","line":13,"column":10,"nodeType":"186","messageId":"187","endLine":13,"endColumn":20},{"ruleId":"184","severity":1,"message":"202","line":13,"column":22,"nodeType":"186","messageId":"187","endLine":13,"endColumn":35},{"ruleId":"203","severity":1,"message":"204","line":51,"column":6,"nodeType":"205","endLine":51,"endColumn":8,"suggestions":"206"},{"ruleId":"184","severity":1,"message":"198","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"203","severity":1,"message":"204","line":52,"column":6,"nodeType":"205","endLine":52,"endColumn":8,"suggestions":"207"},{"ruleId":"184","severity":1,"message":"208","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":20},{"ruleId":"184","severity":1,"message":"209","line":3,"column":37,"nodeType":"186","messageId":"187","endLine":3,"endColumn":45},{"ruleId":"184","severity":1,"message":"210","line":16,"column":8,"nodeType":"186","messageId":"187","endLine":16,"endColumn":13},{"ruleId":"184","severity":1,"message":"200","line":17,"column":8,"nodeType":"186","messageId":"187","endLine":17,"endColumn":14},{"ruleId":"184","severity":1,"message":"209","line":17,"column":22,"nodeType":"186","messageId":"187","endLine":17,"endColumn":30},{"ruleId":"184","severity":1,"message":"211","line":36,"column":17,"nodeType":"186","messageId":"187","endLine":36,"endColumn":24},{"ruleId":"184","severity":1,"message":"212","line":12,"column":10,"nodeType":"186","messageId":"187","endLine":12,"endColumn":14},{"ruleId":"203","severity":1,"message":"213","line":23,"column":6,"nodeType":"205","endLine":23,"endColumn":8,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":66,"column":26,"nodeType":"217","messageId":"218","endLine":66,"endColumn":28},{"ruleId":"215","severity":1,"message":"216","line":114,"column":26,"nodeType":"217","messageId":"218","endLine":114,"endColumn":28},{"ruleId":"215","severity":1,"message":"216","line":163,"column":28,"nodeType":"217","messageId":"218","endLine":163,"endColumn":30},{"ruleId":"203","severity":1,"message":"219","line":72,"column":6,"nodeType":"205","endLine":72,"endColumn":40,"suggestions":"220"},{"ruleId":"184","severity":1,"message":"221","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":13},{"ruleId":"184","severity":1,"message":"222","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":19},{"ruleId":"184","severity":1,"message":"223","line":4,"column":10,"nodeType":"186","messageId":"187","endLine":4,"endColumn":20},{"ruleId":"184","severity":1,"message":"224","line":11,"column":10,"nodeType":"186","messageId":"187","endLine":11,"endColumn":15},{"ruleId":"184","severity":1,"message":"225","line":43,"column":5,"nodeType":"186","messageId":"187","endLine":43,"endColumn":18},{"ruleId":"184","severity":1,"message":"226","line":47,"column":18,"nodeType":"186","messageId":"187","endLine":47,"endColumn":27},{"ruleId":"184","severity":1,"message":"227","line":49,"column":9,"nodeType":"186","messageId":"187","endLine":49,"endColumn":19},{"ruleId":"184","severity":1,"message":"228","line":50,"column":9,"nodeType":"186","messageId":"187","endLine":50,"endColumn":19},{"ruleId":"184","severity":1,"message":"229","line":67,"column":10,"nodeType":"186","messageId":"187","endLine":67,"endColumn":18},{"ruleId":"184","severity":1,"message":"230","line":67,"column":20,"nodeType":"186","messageId":"187","endLine":67,"endColumn":31},{"ruleId":"215","severity":1,"message":"216","line":159,"column":12,"nodeType":"217","messageId":"218","endLine":159,"endColumn":14},{"ruleId":"215","severity":1,"message":"216","line":162,"column":14,"nodeType":"217","messageId":"218","endLine":162,"endColumn":16},{"ruleId":"215","severity":1,"message":"216","line":250,"column":32,"nodeType":"217","messageId":"218","endLine":250,"endColumn":34},{"ruleId":"184","severity":1,"message":"231","line":281,"column":9,"nodeType":"186","messageId":"187","endLine":281,"endColumn":25},{"ruleId":"184","severity":1,"message":"232","line":285,"column":9,"nodeType":"186","messageId":"187","endLine":285,"endColumn":32},{"ruleId":"184","severity":1,"message":"233","line":289,"column":9,"nodeType":"186","messageId":"187","endLine":289,"endColumn":25},{"ruleId":"184","severity":1,"message":"234","line":328,"column":9,"nodeType":"186","messageId":"187","endLine":328,"endColumn":26},{"ruleId":"184","severity":1,"message":"235","line":332,"column":9,"nodeType":"186","messageId":"187","endLine":332,"endColumn":28},{"ruleId":"215","severity":1,"message":"216","line":387,"column":28,"nodeType":"217","messageId":"218","endLine":387,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":414,"column":12,"nodeType":"217","messageId":"218","endLine":414,"endColumn":14},{"ruleId":"215","severity":1,"message":"216","line":614,"column":17,"nodeType":"217","messageId":"218","endLine":614,"endColumn":19},{"ruleId":"203","severity":1,"message":"236","line":28,"column":6,"nodeType":"205","endLine":28,"endColumn":8,"suggestions":"237"},{"ruleId":"215","severity":1,"message":"216","line":47,"column":24,"nodeType":"217","messageId":"218","endLine":47,"endColumn":26},{"ruleId":"215","severity":1,"message":"216","line":81,"column":26,"nodeType":"217","messageId":"218","endLine":81,"endColumn":28},{"ruleId":"215","severity":1,"message":"216","line":143,"column":28,"nodeType":"217","messageId":"218","endLine":143,"endColumn":30},{"ruleId":"184","severity":1,"message":"196","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"203","severity":1,"message":"238","line":52,"column":6,"nodeType":"205","endLine":52,"endColumn":12,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":73,"column":18,"nodeType":"186","messageId":"242","endLine":73,"endColumn":19},{"ruleId":"184","severity":1,"message":"196","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"203","severity":1,"message":"243","line":59,"column":6,"nodeType":"205","endLine":59,"endColumn":12,"suggestions":"244"},{"ruleId":"240","severity":1,"message":"241","line":81,"column":18,"nodeType":"186","messageId":"242","endLine":81,"endColumn":19},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Customers' is defined but never used.","'Dashboard' is defined but never used.","'ProductColor' is defined but never used.","'Products' is defined but never used.","no-native-reassign",["245"],"no-negated-in-lhs",["246"],"'Fragment' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'styles' is defined but never used.","'Layout' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestBody'. Either include it or remove the dependency array.","ArrayExpression",["247"],["248"],"'HashRouter' is defined but never used.","'Redirect' is defined but never used.","'Login' is defined but never used.","'setUser' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'idPC'. Either include it or remove the dependency array.",["249"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array. You can also do a functional update 'setKey(k => ...)' if you only need 'key' in the 'setKey' call.",["250"],"'Table' is defined but never used.","'productList' is defined but never used.","'useHistory' is defined but never used.","'Image' is defined but never used.","'productWithID' is assigned a value but never used.","'setTypeUI' is assigned a value but never used.","'preset_key' is assigned a value but never used.","'cloud_name' is assigned a value but never used.","'listLink' is assigned a value but never used.","'setListLink' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","'handleManufactureChange' is assigned a value but never used.","'handleTypeChange' is assigned a value but never used.","'handleTitleChange' is assigned a value but never used.","'handleContentChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'idbpc'. Either include it or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'nameBranch' and 'valueStatistical'. Either include them or remove the dependency array.",["252"],"no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'amountOfProduct' and 'listNameProduct'. Either include them or remove the dependency array.",["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [requestBody]",{"range":"267","text":"268"},{"range":"269","text":"268"},"Update the dependencies array to be: [idPC]",{"range":"270","text":"271"},"Update the dependencies array to be: [branchId, key, listproductColorBranch]",{"range":"272","text":"273"},"Update the dependencies array to be: [idbpc]",{"range":"274","text":"275"},"Update the dependencies array to be: [data, nameBranch, valueStatistical]",{"range":"276","text":"277"},"Update the dependencies array to be: [amountOfProduct, data, listNameProduct]",{"range":"278","text":"279"},[1558,1560],"[requestBody]",[1381,1383],[867,869],"[idPC]",[2216,2250],"[branchId, key, listproductColorBranch]",[878,880],"[idbpc]",[1388,1394],"[data, nameBranch, valueStatistical]",[1713,1719],"[amountOfProduct, data, listNameProduct]"]