[{"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\index.js":"1","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\reportWebVitals.js":"2","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\layout\\Layout.jsx":"3","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\redux\\reducers\\index.js":"4","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\redux\\actions\\ThemeAction.js":"5","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\Routes.jsx":"6","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\topnav\\TopNav.jsx":"7","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\sidebar\\Sidebar.jsx":"8","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\redux\\reducers\\ThemeReducer.js":"9","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\ProductColor.jsx":"10","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\Products.jsx":"11","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\Dashboard.jsx":"12","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\ProductWorkingPage.jsx":"13","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\Customers.jsx":"14","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\StatisticalPage.jsx":"15","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\ProductColorBranch.jsx":"16","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\ProductColorWorkingPage.jsx":"17","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\StatisticalMonthOfBranch.jsx":"18","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\ProductColorBranchWorkingPage.jsx":"19","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\dropdown\\Dropdown.jsx":"20","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\thememenu\\ThemeMenu.jsx":"21","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\status-card\\StatusCard.jsx":"22","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\table\\Table.jsx":"23","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\badge\\Badge.jsx":"24","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\StatisticalCommonProductSales.jsx":"25"},{"size":894,"mtime":1625492111000,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1625492111000,"results":"28","hashOfConfig":"27"},{"size":1244,"mtime":1682254432267,"results":"29","hashOfConfig":"27"},{"size":162,"mtime":1625492111000,"results":"30","hashOfConfig":"27"},{"size":364,"mtime":1625492111000,"results":"31","hashOfConfig":"27"},{"size":1829,"mtime":1682519509483,"results":"32","hashOfConfig":"27"},{"size":2472,"mtime":1625492111000,"results":"33","hashOfConfig":"27"},{"size":1318,"mtime":1625492111000,"results":"34","hashOfConfig":"27"},{"size":399,"mtime":1625492111000,"results":"35","hashOfConfig":"27"},{"size":1661,"mtime":1682478471166,"results":"36","hashOfConfig":"27"},{"size":1579,"mtime":1682478672505,"results":"37","hashOfConfig":"27"},{"size":6956,"mtime":1625492111000,"results":"38","hashOfConfig":"27"},{"size":17290,"mtime":1682509330434,"results":"39","hashOfConfig":"27"},{"size":1263,"mtime":1682251597517,"results":"40","hashOfConfig":"27"},{"size":1202,"mtime":1682357126458,"results":"41","hashOfConfig":"27"},{"size":2829,"mtime":1682343674761,"results":"42","hashOfConfig":"27"},{"size":3030,"mtime":1682345630682,"results":"43","hashOfConfig":"27"},{"size":2074,"mtime":1682478447698,"results":"44","hashOfConfig":"27"},{"size":2987,"mtime":1682345517379,"results":"45","hashOfConfig":"27"},{"size":1817,"mtime":1625492111000,"results":"46","hashOfConfig":"27"},{"size":4901,"mtime":1625492111000,"results":"47","hashOfConfig":"27"},{"size":448,"mtime":1625492111000,"results":"48","hashOfConfig":"27"},{"size":2402,"mtime":1625492111000,"results":"49","hashOfConfig":"27"},{"size":216,"mtime":1625492111000,"results":"50","hashOfConfig":"27"},{"size":2615,"mtime":1682356823318,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1653gzn",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\index.js",[],["109","110"],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\reportWebVitals.js",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\layout\\Layout.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\redux\\actions\\ThemeAction.js",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\Routes.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\topnav\\TopNav.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\sidebar\\Sidebar.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\redux\\reducers\\ThemeReducer.js",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\ProductColor.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\Products.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\Dashboard.jsx",["111"],"import React, {useEffect} from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Chart from 'react-apexcharts'\n\nimport { useSelector } from 'react-redux'\n\nimport StatusCard from '../components/status-card/StatusCard'\n\nimport Table from '../components/table/Table'\n\nimport Badge from '../components/badge/Badge'\n\nimport statusCards from '../assets/JsonData/status-card-data.json'\n\nconst chartOptions = {\n    series: [{\n        name: 'Online Customers',\n        data: [40,70,20,90,36,80,30,91,60]\n    }, {\n        name: 'Store Customers',\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\n    }],\n    options: {\n        color: ['#6ab04c', '#2980b9'],\n        chart: {\n            background: 'transparent'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n        },\n        legend: {\n            position: 'top'\n        },\n        grid: {\n            show: false\n        }\n    }\n}\n\nconst topCustomers = {\n    head: [\n        'user',\n        'total orders',\n        'total spending'\n    ],\n    body: [\n        {\n            \"username\": \"john doe\",\n            \"order\": \"490\",\n            \"price\": \"$15,870\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"250\",\n            \"price\": \"$12,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"120\",\n            \"price\": \"$10,840\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"110\",\n            \"price\": \"$9,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"80\",\n            \"price\": \"$8,840\"\n        }\n    ]\n}\n\nconst renderCusomerHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderCusomerBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.username}</td>\n        <td>{item.order}</td>\n        <td>{item.price}</td>\n    </tr>\n)\n\nconst latestOrders = {\n    header: [\n        \"order id\",\n        \"user\",\n        \"total price\",\n        \"date\",\n        \"status\"\n    ],\n    body: [\n        {\n            id: \"#OD1711\",\n            user: \"john doe\",\n            date: \"17 Jun 2021\",\n            price: \"$900\",\n            status: \"shipping\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"pending\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"refund\"\n        }\n    ]\n}\n\nconst orderStatus = {\n    \"shipping\": \"primary\",\n    \"pending\": \"warning\",\n    \"paid\": \"success\",\n    \"refund\": \"danger\"\n}\n\nconst renderOrderHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderOrderBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.id}</td>\n        <td>{item.user}</td>\n        <td>{item.price}</td>\n        <td>{item.date}</td>\n        <td>\n            <Badge type={orderStatus[item.status]} content={item.status}/>\n        </td>\n    </tr>\n)\n\nconst Dashboard = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\n\n    return (\n        <div>\n            <h2 className=\"page-header\">Dashboard</h2>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <div className=\"row\">\n                        {\n                            statusCards.map((item, index) => (\n                                <div className=\"col-6\" key={index}>\n                                    <StatusCard\n                                        icon={item.icon}\n                                        count={item.count}\n                                        title={item.title}\n                                    />\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"card full-height\">\n                        {/* chart */}\n                        <Chart\n                            options={themeReducer === 'theme-mode-dark' ? {\n                                ...chartOptions.options,\n                                theme: { mode: 'dark'}\n                            } : {\n                                ...chartOptions.options,\n                                theme: { mode: 'light'}\n                            }}\n                            series={chartOptions.series}\n                            type='line'\n                            height='100%'\n                        />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>top customers</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={topCustomers.head}\n                                renderHead={(item, index) => renderCusomerHead(item, index)}\n                                bodyData={topCustomers.body}\n                                renderBody={(item, index) => renderCusomerBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>latest orders</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={latestOrders.header}\n                                renderHead={(item, index) => renderOrderHead(item, index)}\n                                bodyData={latestOrders.body}\n                                renderBody={(item, index) => renderOrderBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\ProductWorkingPage.jsx",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React from \"react\";\r\nimport Table from \"../components/table/Table\";\r\nimport productList from \"../assets/JsonData/productJson.json\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nimport \"./css/ProductWorkingPage.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"sweetalert2/dist/sweetalert2.min.css\";\r\n\r\n// var productWithID = {\r\n//   id: 1,\r\n//   name: \"Samsung J7\",\r\n//   manufacture: \"Samsung\",\r\n//   type: \"phone\",\r\n//   images: [\r\n//     {\r\n//       nameImage: \"Xanh\",\r\n//       urls: \"https://res.cloudinary.com/dl6y9cyqb/image/upload/v1682272442/sg3ippzaqpi9imkzku0p.jpg\",\r\n//     },\r\n//     {\r\n//       nameImage: \"Đen\",\r\n//       urls: \"https://res.cloudinary.com/dl6y9cyqb/image/upload/v1682272443/c5pwugnz14krhm1khree.png\",\r\n//     },\r\n//   ],\r\n\r\n//   title: \"Chiếc ddiejn thoại tuyệt vời\",\r\n//   content: \"Chiếc ddiejn thoại tuyệt vời lắm\",\r\n//   cpu: \"ádv\",\r\n//   ram: \"sadv\",\r\n//   rom: \"ádv\",\r\n//   graphicCard: \"\",\r\n//   battery: \"ádv\",\r\n//   os: \"ádv\",\r\n//   others: \"ádvsdv\",\r\n// };\r\n\r\nvar productWithID = {};\r\n// var productWithId = JSON.stringify(productJson);\r\n\r\nconst ProductWorkingPage = () => {\r\n  const [typeUI, setTypeUI] = useState(\"phone\");\r\n  //   confix cloudynary\r\n  const preset_key = \"\";\r\n  const cloud_name = \"\";\r\n\r\n  //  thực  hiện fectch xuống csdl để lấy tất cả thông tin sp\r\n  const [name, setName] = useState(\"\");\r\n  const [manufacture, setManufacture] = useState(\"\");\r\n  const [type, setType] = useState(\"phone\");\r\n  const [file, setFile] = useState([]);\r\n  const [descriptionImage, setDescriptionImage] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [cpu, setCpu] = useState(\"\");\r\n  const [ram, setRam] = useState(\"\");\r\n  const [rom, setRom] = useState(\"\");\r\n  const [graphicCard, setGraphicCard] = useState(\"\");\r\n  const [battery, setBattery] = useState(\"\");\r\n  const [os, setOs] = useState(\"\");\r\n  const [others, setOthers] = useState(\"\");\r\n  const [listLink, setListLink] = useState([]);\r\n\r\n  // khu làm việc với sửa và xóa\r\n  //  lấy id của sản phẩm\r\n  const { id } = useParams();\r\n\r\n  const [product, setProduct] = useState({});\r\n\r\n  //   khu vực lấy data\r\n  useEffect(() => {\r\n    async function fetchProduct() {\r\n      try {\r\n        const response = await fetch(`/api/product/${id}`);\r\n        const data = await response.json();\r\n        setProduct(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n        //  chỉ test xem thôi\r\n        autoUpdateFrom(productWithID);\r\n      }\r\n    }\r\n    fetchProduct();\r\n  }, [id]);\r\n\r\n  function autoUpdateFrom(data) {\r\n    if (data.name) {\r\n      setName(data.name);\r\n    }\r\n    if (data.manufacture) {\r\n      setManufacture(data.manufacture);\r\n    }\r\n    if (data.type) {\r\n      setType(data.type);\r\n    }\r\n    // if (data.images) {\r\n    //   var link = [];\r\n    //   for (var i = 0; i < data.images.length; i++) {\r\n    //     link.push(data.images[i].urls);\r\n    //   }\r\n    //   setFile(link);\r\n\r\n    //   var l = [];\r\n    //   for (var i = 0; i < data.images.length; i++) {\r\n    //     l.push(data.images[i].nameImage);\r\n    //   }\r\n    //   setDescriptionImage(l);\r\n    // }\r\n\r\n    // if (data.descriptionImage) {\r\n    //   setDescriptionImage(data.descriptionImage);\r\n    // }\r\n    if (data.title) {\r\n      setTitle(data.title);\r\n    }\r\n    if (data.content) {\r\n      setContent(data.content);\r\n    }\r\n    if (data.cpu) {\r\n      setCpu(data.cpu);\r\n    }\r\n    if (data.ram) {\r\n      setRam(data.ram);\r\n    }\r\n    if (data.rom) {\r\n      setRom(data.rom);\r\n    }\r\n    if (data.graphicCard) {\r\n      setGraphicCard(data.graphicCard);\r\n    }\r\n    if (data.battery) {\r\n      setBattery(data.battery);\r\n    }\r\n    if (data.os) {\r\n      setOs(data.os);\r\n    }\r\n    if (data.others) {\r\n      setOthers(data.others);\r\n    }\r\n  }\r\n\r\n  function clearForm() {\r\n    setName(\"\");\r\n    setManufacture(\"\");\r\n    setType(\"phone\");\r\n    setFile([]);\r\n    setDescriptionImage(\"\");\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setCpu(\"\");\r\n    setRam(\"\");\r\n    setRom(\"\");\r\n    setGraphicCard(\"\");\r\n    setBattery(\"\");\r\n    setOs(\"\");\r\n    setOthers(\"\");\r\n  }\r\n\r\n  // ///////////\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!id) {\r\n      CheckSelectNameImage();\r\n    }\r\n    try {\r\n      const urls = await uploadFiles();\r\n      //   setListLink(urls);\r\n\r\n      var dsImage = [];\r\n      for (var i = 0; i < file.length; i++) {\r\n        var tmp = { nameImage: descriptionImage[i], images: urls[i] };\r\n        dsImage.push(tmp);\r\n      }\r\n      //   var dsImageJson = JSON.stringify(dsImage);\r\n      const data = {\r\n        id,\r\n        name,\r\n        manufacture,\r\n        type,\r\n        images: dsImage,\r\n\r\n        title,\r\n        content,\r\n        cpu,\r\n        ram,\r\n        rom,\r\n        graphicCard,\r\n        battery,\r\n        os,\r\n        others,\r\n      };\r\n      const response = await fetch(\"https://localhost:8000/Admin/addProduct\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      clearForm();\r\n    } catch (error) {\r\n      console.log(error);\r\n      clearForm();\r\n    }\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleManufactureChange = (event) => {\r\n    setManufacture(event.target.value);\r\n  };\r\n\r\n  const handleTypeChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const fileList = event.target.files;\r\n    console.log(event.target.files);\r\n    setFile(Array.from(fileList));\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    const formDataArray = file.map((f) => {\r\n      const formData = new FormData();\r\n      formData.append(\"upload_preset\", \"cellphonesvykhoi\");\r\n      formData.append(\"cloud_name\", \"dl6y9cyqb\");\r\n      formData.append(\"api_key\", \"357945813929283\");\r\n      formData.append(\"file\", f);\r\n      return formData;\r\n    });\r\n\r\n    try {\r\n      const responses = await Promise.all(\r\n        formDataArray.map((formData) =>\r\n          axios.post(\r\n            \"https://api.cloudinary.com/v1_1/dl6y9cyqb/image/upload\",\r\n            formData\r\n          )\r\n        )\r\n      );\r\n\r\n      const urls = responses.map((response) => response.data.secure_url);\r\n      console.log(urls);\r\n      return urls;\r\n      // Lưu đường dẫn của các hình ảnh đã upload vào database của bạn\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  //   const handleDescriptionImageChange = (event) => {\r\n  //     setDescriptionImage(event.target.value);\r\n  //   };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleContentChange = (event) => {\r\n    setContent(event.target.value);\r\n  };\r\n\r\n  const handleCpuChange = (event) => {\r\n    setCpu(event.target.value);\r\n  };\r\n\r\n  const handleRamChange = (event) => {\r\n    setRam(event.target.value);\r\n  };\r\n\r\n  const handleRomChange = (event) => {\r\n    setRom(event.target.value);\r\n  };\r\n\r\n  const handleGraphicCardChange = (event) => {\r\n    setGraphicCard(event.target.value);\r\n  };\r\n\r\n  const handleBatteryChange = (event) => {\r\n    setBattery(event.target.value);\r\n  };\r\n\r\n  const handleOsChange = (event) => {\r\n    setOs(event.target.value);\r\n  };\r\n\r\n  const handleOthersChange = (event) => {\r\n    console.log(others);\r\n    setOthers(event.target.value);\r\n  };\r\n\r\n  //   xử lý xóa sản phẩm\r\n  function DeleteHandle(idProduct) {\r\n    Swal.fire({\r\n      title: \"Bạn có chắc chắn muốn xóa comment này không?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Xóa\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        clearForm();\r\n      }\r\n    });\r\n  }\r\n\r\n  function CheckSelectNameImage() {\r\n    if (descriptionImage.length !== 2 || file.length !== 2) {\r\n      Swal.fire({\r\n        title: \"Vui lòng chọn đúng 2 hình và chọn name cho hình ảnh\",\r\n        icon: \"warning\",\r\n        showCancelButton: false,\r\n        confirmButtonColor: \"#3085d6\",\r\n        confirmButtonText: \"OK\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          // clearForm();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProductWorkingPage__container\">\r\n      <div>\r\n        {id && <p>Id của sản phẩm là: {id}</p>}\r\n        {!id && <h1>Không có sản phẩm</h1>}\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"productBase_container\">\r\n          <div>\r\n            <label htmlFor=\"name\">Name:</label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"manufacture\">Manufacture:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"manufacture\"\r\n              value={manufacture}\r\n              onChange={(event) => setManufacture(event.target.value)}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              pointerEvents: id ? \"none\" : \"auto\",\r\n            }}\r\n          >\r\n            <label htmlFor=\"type\">Type:</label>\r\n            <select\r\n              className=\"selectType\"\r\n              id=\"type\"\r\n              value={typeUI}\r\n              onChange={(event) => setTypeUI(event.target.value)}\r\n            >\r\n              <option value=\"phone\">Phone</option>\r\n              <option value=\"laptop\">Laptop</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"productBaseImage_container\">\r\n          <div\r\n            className=\"productBaseImage_container_item\"\r\n            style={{\r\n              display: id ? \"none\" : \"block\",\r\n            }}\r\n          >\r\n            <label htmlFor=\"files\">Files:</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"files\"\r\n              multiple\r\n              //   value={file}\r\n              onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n              <h3>Select mô tả màu sản phẩm</h3>\r\n              {file.map((fileItem, index) => (\r\n                <div key={index}>\r\n                  <label>{fileItem.name}</label>\r\n                  <select\r\n                    name=\"descriptionImage\"\r\n                    value={descriptionImage[index]}\r\n                    className=\"selectType\"\r\n                    onChange={(event) => {\r\n                      const updatedArray = [...descriptionImage];\r\n                      updatedArray[index] = event.target.value;\r\n                      setDescriptionImage(updatedArray);\r\n                    }}\r\n                    disabled={Object.keys(productWithID).length !== 0}\r\n                  >\r\n                    'Đen' 'Trắng' 'Vàng' 'Xám' 'Xanh'\r\n                    <option value=\"\">-- Select an option --</option>\r\n                    <option value=\"Đen\">Đen</option>\r\n                    <option value=\"Trắng\">Trắng</option>\r\n                    <option value=\"Vàng\">Vàng</option>\r\n                    <option value=\"Xám\">Xám</option>\r\n                    <option value=\"Xanh\">Xanh</option>\r\n                    {/* Thêm các tùy chọn khác nếu cần */}\r\n                  </select>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"productBaseImage_container_item\">\r\n            <label htmlFor=\"title\">Title:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(event) => setTitle(event.target.value)}\r\n            />\r\n            <h3 htmlFor=\"content\">Content:</h3>\r\n            <textarea\r\n              id=\"content\"\r\n              name=\"content\"\r\n              value={content}\r\n              onChange={(event) => setContent(event.target.value)}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        {/*Thông số của laptop*/}\r\n        {typeUI === \"laptop\" && (\r\n          <div className=\"productBaseSpecifications_container\">\r\n            <h1>Các thông số kỹ thuật</h1>\r\n            <div className=\"productBaseSpecifications_container_item\">\r\n              <label htmlFor=\"cpu\">CPU:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"cpu\"\r\n                name=\"CPU\"\r\n                value={cpu}\r\n                onChange={handleCpuChange}\r\n              />\r\n\r\n              <label htmlFor=\"ram\">RAM:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"ram\"\r\n                name=\"RAM\"\r\n                value={ram}\r\n                onChange={handleRamChange}\r\n              />\r\n\r\n              <label htmlFor=\"rom\">ROM:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"rom\"\r\n                name=\"ROM\"\r\n                value={rom}\r\n                onChange={handleRomChange}\r\n              />\r\n            </div>\r\n            <div className=\"productBaseSpecifications_container_item\">\r\n              <label htmlFor=\"graphic_card\">Card đồ họa:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"graphic_card\"\r\n                name=\"Graphic_Card\"\r\n                value={graphicCard}\r\n                onChange={handleGraphicCardChange}\r\n              />\r\n\r\n              <label htmlFor=\"battery\">Pin:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"battery\"\r\n                name=\"Battery\"\r\n                value={battery}\r\n                onChange={handleBatteryChange}\r\n              />\r\n\r\n              <label htmlFor=\"os\">Hệ điều hành:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"os\"\r\n                name=\"Operating_System\"\r\n                value={os}\r\n                onChange={handleOsChange}\r\n              />\r\n            </div>\r\n            <div className=\"productBaseSpecifications_container_item_orther\">\r\n              <label htmlFor=\"others\">Khác:</label>\r\n\r\n              <textarea\r\n                id=\"others\"\r\n                name=\"Others\"\r\n                value={others}\r\n                onChange={handleOthersChange}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/*Thông số của điện thoại*/}\r\n        {typeUI == \"phone\" && (\r\n          <div className=\"productBaseSpecifications_container\">\r\n            <h1>Các thông số kỹ thuật</h1>\r\n            <div className=\"productBaseSpecifications_container_item\">\r\n              <label htmlFor=\"cpu\">CPU:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"cpu\"\r\n                name=\"CPU\"\r\n                value={cpu}\r\n                onChange={handleCpuChange}\r\n              />\r\n\r\n              <label htmlFor=\"ram\">RAM:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"ram\"\r\n                name=\"RAM\"\r\n                value={ram}\r\n                onChange={handleRamChange}\r\n              />\r\n\r\n              <label htmlFor=\"rom\">ROM:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"rom\"\r\n                name=\"ROM\"\r\n                value={rom}\r\n                onChange={handleRomChange}\r\n              />\r\n            </div>\r\n            <div className=\"productBaseSpecifications_container_item\">\r\n              <label htmlFor=\"battery\">Pin:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"battery\"\r\n                name=\"Battery\"\r\n                value={battery}\r\n                onChange={handleBatteryChange}\r\n              />\r\n\r\n              <label htmlFor=\"os\">Hệ điều hành:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"os\"\r\n                name=\"Operating_System\"\r\n                value={os}\r\n                onChange={handleOsChange}\r\n              />\r\n            </div>\r\n            <div className=\"productBaseSpecifications_container_item_orther\">\r\n              <label htmlFor=\"others\">Khác:</label>\r\n\r\n              <textarea\r\n                id=\"others\"\r\n                name=\"Others\"\r\n                value={others}\r\n                onChange={handleOthersChange}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <button className=\"submit_button\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n\r\n        {id ? (\r\n          <button\r\n            className=\"submit_button delete_button\"\r\n            type=\"button\"\r\n            onClick={() => DeleteHandle(productWithID.id)}\r\n          >\r\n            Xóa\r\n          </button>\r\n        ) : null}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductWorkingPage;\r\n","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\Customers.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\StatisticalPage.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\ProductColorBranch.jsx",["127"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from \"../components/table/Table\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport listproductColorBranch from \"../assets/JsonData/productColorBranch.json\";\r\n\r\nconst productColorBranchTableHead = [\r\n  \"idPC-Branch\",\r\n  \"id-Branch\",\r\n  \"Name Product\",\r\n  \"Color\",\r\n  \"Price\",\r\n  \"Type\",\r\n  \"amount\",\r\n];\r\n\r\nconst ProductColorBranch = () => {\r\n  const renderHead = (item, index) => <th key={index}>{item}</th>;\r\n  const history = useHistory();\r\n  const renderBody = (item, index) => (\r\n    <tr key={index} onClick={() => HandleClickProductColorBranch(item.id_bpc)}>\r\n      <td>{item.id_bpc}</td>\r\n      <td>{item.idBranch_id}</td>\r\n      <td>{item.Name}</td>\r\n      <td>{item.nameColor_id}</td>\r\n      <td>{item.Price}</td>\r\n      <td>{item.Type}</td>\r\n      <td>{item.Amount}</td>\r\n    </tr>\r\n  );\r\n  const [branchId, setBranchId] = useState(1);\r\n  const [dsFillter, setDsFillter] = useState([]);\r\n  const [key, setKey] = useState(1);\r\n  const [selectValue, setSelectValue] = useState(\"1\");\r\n\r\n  function HandleClickProductColorBranch(idPCB) {\r\n    history.push(`/productColorBranchWorkingPage/${idPCB}`);\r\n    console.log(\"co click\");\r\n  }\r\n\r\n  const handleBranchFilter = (event) => {\r\n    const value = event.target.value;\r\n    setSelectValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setBranchId(parseInt(selectValue));\r\n    setKey(key + 1);\r\n    const newDsFillter = listproductColorBranch.filter((h) => {\r\n      if (h.idBranch_id === branchId) return true;\r\n      else return false;\r\n    });\r\n\r\n    setDsFillter(newDsFillter);\r\n  }, [selectValue, branchId]);\r\n\r\n  return (\r\n    <div key={key}>\r\n      <h2 className=\"page-header\">Product- Color</h2>\r\n\r\n      <select\r\n        id=\"product-color-branch\"\r\n        name=\"product-color\"\r\n        className=\"select-color\"\r\n        value={branchId}\r\n        onChange={handleBranchFilter}\r\n      >\r\n        <option value=\"1\">Cửa Hàng 1</option>\r\n        <option value=\"2\">Cửa Hàng 2</option>\r\n        <option value=\"3\">Cửa Hàng 3</option>\r\n      </select>\r\n\r\n      <button\r\n        className=\"addProduct\"\r\n        onClick={() => HandleClickProductColorBranch(null)}\r\n      >\r\n        Thêm\r\n      </button>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card__body\">\r\n              <Table\r\n                limit=\"10\"\r\n                headData={productColorBranchTableHead}\r\n                renderHead={(item, index) => renderHead(item, index)}\r\n                bodyData={dsFillter}\r\n                renderBody={(item, index) => renderBody(item, index)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductColorBranch;\r\n","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\ProductColorWorkingPage.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\StatisticalMonthOfBranch.jsx",["128"],"import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport \"./css/StatisticalBranchOfMonth.css\";\r\n\r\nfunction StatisticalMonthOfBranch() {\r\n  const chartRef = useRef(null);\r\n  const [branchId, setBranchId] = useState(\"1\");\r\n\r\n  const handleMonthSelect = (event) => {\r\n    setBranchId(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const myChartRef = chartRef.current.getContext(\"2d\");\r\n\r\n    new Chart(myChartRef, {\r\n      type: \"pie\",\r\n      data: {\r\n        labels: [\"Cửa Hàng 1\", \"Cửa Hàng 2\", \"Cửa Hàng 3\"],\r\n        datasets: [\r\n          {\r\n            data: [12, 19, 3],\r\n            backgroundColor: [\"#04c88d\", \"#ff0000\", \"#fff800\"],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n        Doanh Thu Trong Tháng của các cửa hàng\r\n      </h1>\r\n      <select\r\n        id=\"month\"\r\n        name=\"month\"\r\n        className=\"select-month selectType\"\r\n        value={branchId}\r\n        onChange={handleMonthSelect}\r\n      >\r\n        <option value=\"1\">Tháng 1</option>\r\n        <option value=\"2\">Tháng 2</option>\r\n        <option value=\"3\">Tháng 3</option>\r\n      </select>\r\n\r\n      <div className=\"pieChart-container\">\r\n        <div className=\"pieChart-container-chart\">\r\n          {/* <div className=\"pieChart-container\"> */}\r\n          <canvas id=\"myChart\" ref={chartRef} width={10} height={10} />\r\n          {/* </div> */}\r\n        </div>\r\n\r\n        <div className=\"box-item-container\">\r\n          <div className=\"box-item-number\">\r\n            <h1>Cửa Hàng 1 là : </h1>\r\n          </div>\r\n          <div className=\"box-item-number\">\r\n            <h1>Cửa Hàng 2 là : </h1>\r\n          </div>\r\n          <div className=\"box-item-number\">\r\n            <h1>Cửa Hàng 3 là : </h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatisticalMonthOfBranch;\r\n","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\ProductColorBranchWorkingPage.jsx",["129"],"import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./css/PCB.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction ProductColorBranchWorkingPage() {\r\n  const [idProductColor, setIdProductColor] = useState(\"\");\r\n  const [productColor, setProductColor] = useState(\"\");\r\n  const [productQuantity, setProductQuantity] = useState(\"\");\r\n\r\n  // Hàm xử lý submit form\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Code xử lý khi submit form\r\n    // console.log(idProductColor, productColor, productQuantity);\r\n  }\r\n\r\n  // Hàm xử lý xóa sản phẩm\r\n  function handleDelete(idProduct) {\r\n    Swal.fire({\r\n      title: \"Bạn có chắc chắn muốn xóa sản phẩm này không?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Xóa\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        // Code xử lý khi xóa sản phẩm\r\n        console.log(\"Đã xóa sản phẩm\");\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"pcb-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"pcb-item\">\r\n          <select\r\n            id=\"product-color\"\r\n            name=\"product-color\"\r\n            className=\"select-color\"\r\n            value={productColor}\r\n            onChange={(e) => setProductColor(e.target.value)}\r\n          >\r\n            <option value=\"1\">Cửa Hàng 1</option>\r\n            <option value=\"2\">Cửa Hàng 2</option>\r\n            <option value=\"3\">Cửa Hàng 3</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-name\">Mã sản phẩm - màu sắc: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"product-name\"\r\n            value={idProductColor}\r\n            onChange={(e) => setIdProductColor(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-name\">Tên sản phẩm: </label>\r\n        </div>\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-color\">Màu sắc: </label>\r\n        </div>\r\n\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-price\">Giá: </label>\r\n        </div>\r\n        <div className=\"pcb-item\">\r\n          <label htmlFor=\"product-quantity\">Số lượng: </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"product-quantity\"\r\n            value={productQuantity}\r\n            onChange={(e) => setProductQuantity(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"submit_button\" type=\"submit\">\r\n          OK\r\n        </button>\r\n        <button\r\n          className=\"submit_button delete_button\"\r\n          type=\"button\"\r\n          onClick={handleDelete}\r\n        >\r\n          Xóa\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductColorBranchWorkingPage;\r\n","C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\dropdown\\Dropdown.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\thememenu\\ThemeMenu.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\status-card\\StatusCard.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\table\\Table.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\components\\badge\\Badge.jsx",[],"C:\\Users\\Vy Khoi\\Pictures\\AdminCellphones2\\tua-react-admin-main\\src\\pages\\StatisticalCommonProductSales.jsx",["130"],"import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport \"./css/StatisticalBranchOfMonth.css\";\r\n\r\nfunction StatisticalCommonProductSales() {\r\n  const chartRef = useRef(null);\r\n  const [month, setMonth] = useState(\"1\");\r\n  const [branchId, setBranchId] = useState(\"1\");\r\n  const handleMonthSelect = (event) => {\r\n    setMonth(event.target.value);\r\n  };\r\n  const handleBranchSelect = (event) => {\r\n    setBranchId(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const myChartRef = chartRef.current.getContext(\"2d\");\r\n\r\n    new Chart(myChartRef, {\r\n      type: \"pie\",\r\n      data: {\r\n        labels: [\r\n          \"Iphone 3\",\r\n          \"Samsung j7\",\r\n          \"Redmi Note9s\",\r\n          \"iphone 4\",\r\n          \"Samsung A04\",\r\n        ],\r\n        datasets: [\r\n          {\r\n            data: [20, 10, 3, 12, 9],\r\n            backgroundColor: [\"#04c88d\", \"#ff0000\", \"#fff800\", \"gray\", \"pink\"],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n        Doanh Thu Trong Tháng của các cửa hàng\r\n      </h1>\r\n      <select\r\n        id=\"month\"\r\n        name=\"month\"\r\n        className=\"select-month selectType\"\r\n        value={month}\r\n        onChange={handleMonthSelect}\r\n      >\r\n        <option value=\"1\">Tháng 1</option>\r\n        <option value=\"2\">Tháng 2</option>\r\n        <option value=\"3\">Tháng 3</option>\r\n      </select>\r\n\r\n      <select\r\n        id=\"month\"\r\n        name=\"month\"\r\n        className=\"select-month selectType\"\r\n        value={branchId}\r\n        onChange={handleBranchSelect}\r\n      >\r\n        <option value=\"1\">Cửa Hàng 1</option>\r\n        <option value=\"2\">Cửa Hàng 2</option>\r\n        <option value=\"3\">Cửa Hàng 3</option>\r\n      </select>\r\n\r\n      <div className=\"pieChart-container\">\r\n        <div className=\"pieChart-container-chart\">\r\n          {/* <div className=\"pieChart-container\"> */}\r\n          <canvas id=\"myChart\" ref={chartRef} width={10} height={10} />\r\n          {/* </div> */}\r\n        </div>\r\n\r\n        <div className=\"box-item-container\">\r\n          <div className=\"box-item-number\">\r\n            <h1>Sp 1 </h1>\r\n          </div>\r\n          <div className=\"box-item-number\">\r\n            <h1>Sp 1 </h1>\r\n          </div>\r\n          <div className=\"box-item-number\">\r\n            <h1>Sp 1 </h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatisticalCommonProductSales;\r\n",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":16,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"139","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":13},{"ruleId":"135","severity":1,"message":"140","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":19},{"ruleId":"135","severity":1,"message":"141","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":20},{"ruleId":"135","severity":1,"message":"142","line":11,"column":10,"nodeType":"137","messageId":"138","endLine":11,"endColumn":15},{"ruleId":"135","severity":1,"message":"143","line":49,"column":9,"nodeType":"137","messageId":"138","endLine":49,"endColumn":19},{"ruleId":"135","severity":1,"message":"144","line":50,"column":9,"nodeType":"137","messageId":"138","endLine":50,"endColumn":19},{"ruleId":"135","severity":1,"message":"145","line":67,"column":10,"nodeType":"137","messageId":"138","endLine":67,"endColumn":18},{"ruleId":"135","severity":1,"message":"146","line":67,"column":20,"nodeType":"137","messageId":"138","endLine":67,"endColumn":31},{"ruleId":"135","severity":1,"message":"147","line":73,"column":10,"nodeType":"137","messageId":"138","endLine":73,"endColumn":17},{"ruleId":"135","severity":1,"message":"148","line":214,"column":9,"nodeType":"137","messageId":"138","endLine":214,"endColumn":25},{"ruleId":"135","severity":1,"message":"149","line":218,"column":9,"nodeType":"137","messageId":"138","endLine":218,"endColumn":32},{"ruleId":"135","severity":1,"message":"150","line":222,"column":9,"nodeType":"137","messageId":"138","endLine":222,"endColumn":25},{"ruleId":"135","severity":1,"message":"151","line":265,"column":9,"nodeType":"137","messageId":"138","endLine":265,"endColumn":26},{"ruleId":"135","severity":1,"message":"152","line":269,"column":9,"nodeType":"137","messageId":"138","endLine":269,"endColumn":28},{"ruleId":"153","severity":1,"message":"154","line":520,"column":17,"nodeType":"155","messageId":"156","endLine":520,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":54,"column":6,"nodeType":"159","endLine":54,"endColumn":29,"suggestions":"160"},{"ruleId":"135","severity":1,"message":"161","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"162","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":19},{"ruleId":"135","severity":1,"message":"161","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'productList' is defined but never used.","'useHistory' is defined but never used.","'Image' is defined but never used.","'preset_key' is assigned a value but never used.","'cloud_name' is assigned a value but never used.","'listLink' is assigned a value but never used.","'setListLink' is assigned a value but never used.","'product' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","'handleManufactureChange' is assigned a value but never used.","'handleTypeChange' is assigned a value but never used.","'handleTitleChange' is assigned a value but never used.","'handleContentChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array. You can also do a functional update 'setKey(k => ...)' if you only need 'key' in the 'setKey' call.","ArrayExpression",["165"],"'Fragment' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},"Update the dependencies array to be: [selectValue, branchId, key]",{"range":"168","text":"169"},[1631,1654],"[selectValue, branchId, key]"]