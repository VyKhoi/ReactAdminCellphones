{"ast":null,"code":"var DataView = require('./_DataView'),\n  Map = require('./_Map'),\n  Promise = require('./_Promise'),\n  Set = require('./_Set'),\n  WeakMap = require('./_WeakMap'),\n  baseGetTag = require('./_baseGetTag'),\n  toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n  objectTag = '[object Object]',\n  promiseTag = '[object Promise]',\n  setTag = '[object Set]',\n  weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n  mapCtorString = toSource(Map),\n  promiseCtorString = toSource(Promise),\n  setCtorString = toSource(Set),\n  weakMapCtorString = toSource(WeakMap);\n\n/**\r\n * Gets the `toStringTag` of `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function (value) {\n    var result = baseGetTag(value),\n      Ctor = result == objectTag ? value.constructor : undefined,\n      ctorString = Ctor ? toSource(Ctor) : '';\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n        case mapCtorString:\n          return mapTag;\n        case promiseCtorString:\n          return promiseTag;\n        case setCtorString:\n          return setTag;\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\nmodule.exports = getTag;","map":{"version":3,"names":["DataView","require","Map","Promise","Set","WeakMap","baseGetTag","toSource","mapTag","objectTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","value","result","Ctor","constructor","undefined","ctorString","module","exports"],"sources":["C:/Users/Admin/Desktop/REACTADMINCELLPHONES/ReactAdminCellphones/node_modules/lodash/_getTag.js"],"sourcesContent":["var DataView = require('./_DataView'),\r\n    Map = require('./_Map'),\r\n    Promise = require('./_Promise'),\r\n    Set = require('./_Set'),\r\n    WeakMap = require('./_WeakMap'),\r\n    baseGetTag = require('./_baseGetTag'),\r\n    toSource = require('./_toSource');\r\n\r\n/** `Object#toString` result references. */\r\nvar mapTag = '[object Map]',\r\n    objectTag = '[object Object]',\r\n    promiseTag = '[object Promise]',\r\n    setTag = '[object Set]',\r\n    weakMapTag = '[object WeakMap]';\r\n\r\nvar dataViewTag = '[object DataView]';\r\n\r\n/** Used to detect maps, sets, and weakmaps. */\r\nvar dataViewCtorString = toSource(DataView),\r\n    mapCtorString = toSource(Map),\r\n    promiseCtorString = toSource(Promise),\r\n    setCtorString = toSource(Set),\r\n    weakMapCtorString = toSource(WeakMap);\r\n\r\n/**\r\n * Gets the `toStringTag` of `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nvar getTag = baseGetTag;\r\n\r\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\r\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\r\n    (Map && getTag(new Map) != mapTag) ||\r\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\r\n    (Set && getTag(new Set) != setTag) ||\r\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\r\n  getTag = function(value) {\r\n    var result = baseGetTag(value),\r\n        Ctor = result == objectTag ? value.constructor : undefined,\r\n        ctorString = Ctor ? toSource(Ctor) : '';\r\n\r\n    if (ctorString) {\r\n      switch (ctorString) {\r\n        case dataViewCtorString: return dataViewTag;\r\n        case mapCtorString: return mapTag;\r\n        case promiseCtorString: return promiseTag;\r\n        case setCtorString: return setTag;\r\n        case weakMapCtorString: return weakMapTag;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\nmodule.exports = getTag;\r\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;EACjCC,GAAG,GAAGD,OAAO,CAAC,QAAQ,CAAC;EACvBE,OAAO,GAAGF,OAAO,CAAC,YAAY,CAAC;EAC/BG,GAAG,GAAGH,OAAO,CAAC,QAAQ,CAAC;EACvBI,OAAO,GAAGJ,OAAO,CAAC,YAAY,CAAC;EAC/BK,UAAU,GAAGL,OAAO,CAAC,eAAe,CAAC;EACrCM,QAAQ,GAAGN,OAAO,CAAC,aAAa,CAAC;;AAErC;AACA,IAAIO,MAAM,GAAG,cAAc;EACvBC,SAAS,GAAG,iBAAiB;EAC7BC,UAAU,GAAG,kBAAkB;EAC/BC,MAAM,GAAG,cAAc;EACvBC,UAAU,GAAG,kBAAkB;AAEnC,IAAIC,WAAW,GAAG,mBAAmB;;AAErC;AACA,IAAIC,kBAAkB,GAAGP,QAAQ,CAACP,QAAQ,CAAC;EACvCe,aAAa,GAAGR,QAAQ,CAACL,GAAG,CAAC;EAC7Bc,iBAAiB,GAAGT,QAAQ,CAACJ,OAAO,CAAC;EACrCc,aAAa,GAAGV,QAAQ,CAACH,GAAG,CAAC;EAC7Bc,iBAAiB,GAAGX,QAAQ,CAACF,OAAO,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIc,MAAM,GAAGb,UAAU;;AAEvB;AACA,IAAKN,QAAQ,IAAImB,MAAM,CAAC,IAAInB,QAAQ,CAAC,IAAIoB,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIP,WAAW,IACnEX,GAAG,IAAIiB,MAAM,CAAC,IAAIjB,GAAG,GAAC,IAAIM,MAAO,IACjCL,OAAO,IAAIgB,MAAM,CAAChB,OAAO,CAACkB,OAAO,EAAE,CAAC,IAAIX,UAAW,IACnDN,GAAG,IAAIe,MAAM,CAAC,IAAIf,GAAG,GAAC,IAAIO,MAAO,IACjCN,OAAO,IAAIc,MAAM,CAAC,IAAId,OAAO,GAAC,IAAIO,UAAW,EAAE;EAClDO,MAAM,GAAG,SAAAA,CAASG,KAAK,EAAE;IACvB,IAAIC,MAAM,GAAGjB,UAAU,CAACgB,KAAK,CAAC;MAC1BE,IAAI,GAAGD,MAAM,IAAId,SAAS,GAAGa,KAAK,CAACG,WAAW,GAAGC,SAAS;MAC1DC,UAAU,GAAGH,IAAI,GAAGjB,QAAQ,CAACiB,IAAI,CAAC,GAAG,EAAE;IAE3C,IAAIG,UAAU,EAAE;MACd,QAAQA,UAAU;QAChB,KAAKb,kBAAkB;UAAE,OAAOD,WAAW;QAC3C,KAAKE,aAAa;UAAE,OAAOP,MAAM;QACjC,KAAKQ,iBAAiB;UAAE,OAAON,UAAU;QACzC,KAAKO,aAAa;UAAE,OAAON,MAAM;QACjC,KAAKO,iBAAiB;UAAE,OAAON,UAAU;MAAC;IAE9C;IACA,OAAOW,MAAM;EACf,CAAC;AACH;AAEAK,MAAM,CAACC,OAAO,GAAGV,MAAM"},"metadata":{},"sourceType":"script"}