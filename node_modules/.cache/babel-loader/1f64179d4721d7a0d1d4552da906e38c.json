{"ast":null,"code":"var baseDifference = require('./_baseDifference'),\n  baseFlatten = require('./_baseFlatten'),\n  baseRest = require('./_baseRest'),\n  isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\r\n * Creates an array of `array` values not included in the other given arrays\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons. The order and references of result values are\r\n * determined by the first array.\r\n *\r\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {...Array} [values] The values to exclude.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @see _.without, _.xor\r\n * @example\r\n *\r\n * _.difference([2, 1], [2, 3]);\r\n * // => [1]\r\n */\nvar difference = baseRest(function (array, values) {\n  return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];\n});\nmodule.exports = difference;","map":{"version":3,"names":["baseDifference","require","baseFlatten","baseRest","isArrayLikeObject","difference","array","values","module","exports"],"sources":["C:/Users/Admin/Desktop/REACTADMINCELLPHONES/ReactAdminCellphones/node_modules/lodash/difference.js"],"sourcesContent":["var baseDifference = require('./_baseDifference'),\r\n    baseFlatten = require('./_baseFlatten'),\r\n    baseRest = require('./_baseRest'),\r\n    isArrayLikeObject = require('./isArrayLikeObject');\r\n\r\n/**\r\n * Creates an array of `array` values not included in the other given arrays\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons. The order and references of result values are\r\n * determined by the first array.\r\n *\r\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {...Array} [values] The values to exclude.\r\n * @returns {Array} Returns the new array of filtered values.\r\n * @see _.without, _.xor\r\n * @example\r\n *\r\n * _.difference([2, 1], [2, 3]);\r\n * // => [1]\r\n */\r\nvar difference = baseRest(function(array, values) {\r\n  return isArrayLikeObject(array)\r\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\r\n    : [];\r\n});\r\n\r\nmodule.exports = difference;\r\n"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;EAC7CC,WAAW,GAAGD,OAAO,CAAC,gBAAgB,CAAC;EACvCE,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;EACjCG,iBAAiB,GAAGH,OAAO,CAAC,qBAAqB,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAII,UAAU,GAAGF,QAAQ,CAAC,UAASG,KAAK,EAAEC,MAAM,EAAE;EAChD,OAAOH,iBAAiB,CAACE,KAAK,CAAC,GAC3BN,cAAc,CAACM,KAAK,EAAEJ,WAAW,CAACK,MAAM,EAAE,CAAC,EAAEH,iBAAiB,EAAE,IAAI,CAAC,CAAC,GACtE,EAAE;AACR,CAAC,CAAC;AAEFI,MAAM,CAACC,OAAO,GAAGJ,UAAU"},"metadata":{},"sourceType":"script"}