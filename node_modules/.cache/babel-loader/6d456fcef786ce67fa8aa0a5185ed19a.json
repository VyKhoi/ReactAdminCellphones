{"ast":null,"code":"var baseToString = require('./_baseToString'),\n  baseTrim = require('./_baseTrim'),\n  castSlice = require('./_castSlice'),\n  charsEndIndex = require('./_charsEndIndex'),\n  charsStartIndex = require('./_charsStartIndex'),\n  stringToArray = require('./_stringToArray'),\n  toString = require('./toString');\n\n/**\r\n * Removes leading and trailing whitespace or specified characters from `string`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to trim.\r\n * @param {string} [chars=whitespace] The characters to trim.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {string} Returns the trimmed string.\r\n * @example\r\n *\r\n * _.trim('  abc  ');\r\n * // => 'abc'\r\n *\r\n * _.trim('-_-abc-_-', '_-');\r\n * // => 'abc'\r\n *\r\n * _.map(['  foo  ', '  bar  '], _.trim);\r\n * // => ['foo', 'bar']\r\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return baseTrim(string);\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n    chrSymbols = stringToArray(chars),\n    start = charsStartIndex(strSymbols, chrSymbols),\n    end = charsEndIndex(strSymbols, chrSymbols) + 1;\n  return castSlice(strSymbols, start, end).join('');\n}\nmodule.exports = trim;","map":{"version":3,"names":["baseToString","require","baseTrim","castSlice","charsEndIndex","charsStartIndex","stringToArray","toString","trim","string","chars","guard","undefined","strSymbols","chrSymbols","start","end","join","module","exports"],"sources":["C:/Users/Admin/Desktop/REACTADMINCELLPHONES/ReactAdminCellphones/node_modules/lodash/trim.js"],"sourcesContent":["var baseToString = require('./_baseToString'),\r\n    baseTrim = require('./_baseTrim'),\r\n    castSlice = require('./_castSlice'),\r\n    charsEndIndex = require('./_charsEndIndex'),\r\n    charsStartIndex = require('./_charsStartIndex'),\r\n    stringToArray = require('./_stringToArray'),\r\n    toString = require('./toString');\r\n\r\n/**\r\n * Removes leading and trailing whitespace or specified characters from `string`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to trim.\r\n * @param {string} [chars=whitespace] The characters to trim.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {string} Returns the trimmed string.\r\n * @example\r\n *\r\n * _.trim('  abc  ');\r\n * // => 'abc'\r\n *\r\n * _.trim('-_-abc-_-', '_-');\r\n * // => 'abc'\r\n *\r\n * _.map(['  foo  ', '  bar  '], _.trim);\r\n * // => ['foo', 'bar']\r\n */\r\nfunction trim(string, chars, guard) {\r\n  string = toString(string);\r\n  if (string && (guard || chars === undefined)) {\r\n    return baseTrim(string);\r\n  }\r\n  if (!string || !(chars = baseToString(chars))) {\r\n    return string;\r\n  }\r\n  var strSymbols = stringToArray(string),\r\n      chrSymbols = stringToArray(chars),\r\n      start = charsStartIndex(strSymbols, chrSymbols),\r\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\r\n\r\n  return castSlice(strSymbols, start, end).join('');\r\n}\r\n\r\nmodule.exports = trim;\r\n"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAiB,CAAC;EACzCC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;EACjCE,SAAS,GAAGF,OAAO,CAAC,cAAc,CAAC;EACnCG,aAAa,GAAGH,OAAO,CAAC,kBAAkB,CAAC;EAC3CI,eAAe,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;EAC/CK,aAAa,GAAGL,OAAO,CAAC,kBAAkB,CAAC;EAC3CM,QAAQ,GAAGN,OAAO,CAAC,YAAY,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,IAAIA,CAACC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;EAClCF,MAAM,GAAGF,QAAQ,CAACE,MAAM,CAAC;EACzB,IAAIA,MAAM,KAAKE,KAAK,IAAID,KAAK,KAAKE,SAAS,CAAC,EAAE;IAC5C,OAAOV,QAAQ,CAACO,MAAM,CAAC;EACzB;EACA,IAAI,CAACA,MAAM,IAAI,EAAEC,KAAK,GAAGV,YAAY,CAACU,KAAK,CAAC,CAAC,EAAE;IAC7C,OAAOD,MAAM;EACf;EACA,IAAII,UAAU,GAAGP,aAAa,CAACG,MAAM,CAAC;IAClCK,UAAU,GAAGR,aAAa,CAACI,KAAK,CAAC;IACjCK,KAAK,GAAGV,eAAe,CAACQ,UAAU,EAAEC,UAAU,CAAC;IAC/CE,GAAG,GAAGZ,aAAa,CAACS,UAAU,EAAEC,UAAU,CAAC,GAAG,CAAC;EAEnD,OAAOX,SAAS,CAACU,UAAU,EAAEE,KAAK,EAAEC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AACnD;AAEAC,MAAM,CAACC,OAAO,GAAGX,IAAI"},"metadata":{},"sourceType":"script"}